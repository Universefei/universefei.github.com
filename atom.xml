<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[NerdFei]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com//"/>
  <updated>2015-07-26T16:45:37.000Z</updated>
  <id>http://yoursite.com//</id>
  
  <author>
    <name><![CDATA[Fei Lunzhou]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[谈谈DevOps和虚拟化]]></title>
    <link href="http://yoursite.com/2015/07/26/%E8%B0%88%E8%B0%88DevOps%E5%92%8C%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    <id>http://yoursite.com/2015/07/26/谈谈DevOps和虚拟化/</id>
    <published>2015-07-26T09:40:42.000Z</published>
    <updated>2015-07-26T16:45:37.000Z</updated>
    <content type="html"><![CDATA[<p>其实DevOps和虚拟化并没有多大关系，为什么要把这两个东西放在一起呢？如果有人跟我突兀的讲这两个词，我会联想到docker。其实也就是因为docker才有了这篇文章。此文只是简单的介绍，以后会抽出时间专门来分别介绍虚拟化技术、DevOps还有Docker。</p>
<h3 id="背景">背景</h3><p>因为需要在内网中搭建一个私有云，一方面是提高硬件的利用率，另外提高系统的可用性和伸缩性。如今有很多云平台可用，但是由于某些安全原因，我们不能使用开放的平台。之前是在几台bare metal上安装了Citrix xen server,使用一个Windows机器上安装xen Center来连接Xen server安装了一些CentOS6.4，之后在这些CentOS上使用Anbari部署Hadoop集群，用来处理的大量的GIS数据。然后有一天Hadoop的master节点无故宕机了，导致整个Hadoop集群就不可用了。老大想探索新方法来增强系统的可用性，另外的要求是系统宕了之后，如果可能，能够迅速的切换到其他的环境下，部署并运行，而不需要在部署Hadoop好之后才能重新运行集群。</p>
<p>总结起来就提出了以下几个要求：</p>
<ul>
<li>硬件高利用率</li>
<li>高可用性</li>
<li>伸缩性</li>
<li>快速部署和运行</li>
</ul>
<p>使用虚拟化技术可以从一定程度上提高硬件的利用率；在分布式环境中，提高可用性可使用反向代理和热备的方式；系统的伸缩性由Hadoop来控制，增加节点不是难事；至于快速部署运行，我首相想到的是Docker和vagrant，他们都是DevOps的有理工具。本文将简要介绍以上几个方面。</p>
<h3 id="虚拟化技术">虚拟化技术</h3><p>使用虚拟化技术能够提高硬件的利用率，因为如果一台物理机只跑一个应用或者服务的话，cpu的利用率的均值不会很高，当采用虚拟化技术，同时运行多个虚拟机OS的时候，可以提高cpu的利用率均值。</p>
<p>当今虚拟化技术可以分为以下三种：</p>
<ul>
<li>Type1 Hypervisor<ul>
<li>Xen (Citrix)</li>
<li>KVM （FOSS）</li>
<li>Hyper-v （MicroSoft）</li>
</ul>
</li>
<li>Type2 Hypervisor<ul>
<li>VMWare Fusion</li>
<li>Virtual Box （Oracle）</li>
<li>Parallels</li>
</ul>
</li>
<li>Container<ul>
<li>Docker</li>
<li>LXC (IBM Linux Containers)</li>
<li>nspawn</li>
</ul>
</li>
</ul>
<p>两种Hypervisor的区别如下图所示：</p>
<img src="/2015/07/26/谈谈DevOps和虚拟化/compare0.png" alt="compare0.png" title="">
<p>以上两种Hypervisor的最大区别是，Type1 Hypervisor是直接安装在裸机上的，然而Type2 Hypervisor是安装在桌面操作系统上的。</p>
<p>Docker与LXC和Hypervisor的关系如图所示：<br><img src="/2015/07/26/谈谈DevOps和虚拟化/compare.png" alt="compare.png" title=""></p>
<p>Hypervisor虚拟化技术添加了一个Hypervisor层，Hypervisor层来模拟虚拟机运行所需要的硬件功能，然后虚拟机跑在这些Hypervisor之上，也就是说Hypervisor是硬件级别的虚拟化。Hypervisor需要对整个硬件设备进行抽象（包括cpu，网络，外部设备等）。<br>然而Container虚拟化则是操作系统级别的虚拟化。每一个Guest container操作系统与Host主机共享同样的内核，有时候甚至可以共享部分操作系统，正因为如此container可以扔掉hypervisor VM中99%的虚拟机垃圾，保持一个瘦小，简单的容器来保持你的应用。container值需要对操作系统进行抽象。<br>另外，Google在很早以前就开始投入到容器的研发和使用中了，现在Google几乎所有的应用都是跑在container里的，比如google search, Gmail, Google Docs等等。</p>
<p>container的这种方式有以下优点：</p>
<ul>
<li>虚拟机与Hypervisor相比更小</li>
<li>container之间共享资源效率更高（多个container打开一个文件，只需要在HOST内核中管理一个打开句柄，二Hypervisor则每个VM中需要各自打开）</li>
<li>container更节约内存（Hypervisor需要为各个vm的内核分配内存，而且启动VM之前需要预先分配好内存大小）</li>
<li>启动和关闭更快（因为在HOST眼中就是一些进程，秒级别）</li>
</ul>
<p>由于以上几点，那么：</p>
<ul>
<li>同样的物理机，可以打开更多的container</li>
<li>由于更轻量级，并且资源利用率更高，如果用container来搭建VPS服务，或者PaaS的时候则更节省资源</li>
<li>Hypervisor更适合用来搭建IaaS(个人观点)</li>
<li>随着container的出现，产生了微服务架构的概念。</li>
</ul>
<h4 id="Docker环境的条件">Docker环境的条件</h4><p>比较了Hypervisor和container之后，显示出了container的优势，然后安装Docker也需要一些基本的前提条件。</p>
<ul>
<li>目前只支持64位CPU架构的计算机(目前只能是x86_64和amd64)，不支持32位CPU</li>
<li>Linux3.8或者更高的内核版本，2.6.x或者之后的或许也能运行，但是可能出现问题</li>
<li>内核必须支持一种合适的存储驱动，例如Device Manager/AUFS/vfs/btrfs等</li>
<li>内核必须支持并开启cgroup和命名空间namespace功能。</li>
</ul>
<h3 id="DevOps">DevOps</h3><img src="/2015/07/26/谈谈DevOps和虚拟化/vs.png" alt="vs.png" title="">
<p>Wikipedia对DevOps的解释如下：</p>
<blockquote>
<p>DevOps is a software development method that emphasizes communication, collaboration (information sharing and web service usage),integration, automation, and measurement of cooperation between software developers and other IT professionals. The method acknowledges the interdependence of software development, quality assurance (QA), and IT operations, and aims to help an organization rapidly produce software products and services and to improve operations performance.</p>
</blockquote>
<img src="/2015/07/26/谈谈DevOps和虚拟化/devopsguys.jpg" alt="devopsguys.jpg" title="">
<p>我理解的DevOps是一个团队角色。即懂开发、测试又懂运维。传统的团队，开发团队、测试团队和运维团队往往是分开的，这往往降低了交流与合作的效率，然而DevOps角色的出现能够有效解决这方面的问题。</p>
<p>DevOps这个词和full stack有些像，是颇具争议的。Jeff Knupp就对DevOps持反对意见，可见他的文章《<a href="http://jeffknupp.com/blog/2014/04/15/how-devops-is-killing-the-developer/" target="_blank" rel="external">How ‘DevOps’ is killing the Developer</a>》,最近玉伯和耗子在微博中的辩论也与这个有关，耗子就倾向于小而美的团队，一人掌握多技能和职责.</p>
<h4 id="从Developer到DevOps">从Developer到DevOps</h4><img src="/2015/07/26/谈谈DevOps和虚拟化/timeline.jpg" alt="timeline.jpg" title="">
<p>Developer非运维人员，一般只专注于代码部分，职能中不会涉及到代码完了之后的过程，这些过程包括持续集成中的自动构建和测试、服务器配置、部署、发布等。DevOps除了写好代码之外还应该能够掌握从代码完成到上线的整个过程。</p>
<p>作为一名开发人员，需要突破自己的局限，向DevOps方向扩展自己。这个过程中除了需要了解从代码到产品上线的整个流程之外，就只剩下学习一些常用的工具了。我觉得从Developer到DevOps需要学习以下几个方面的知识：</p>
<ul>
<li>自动化(Automation)</li>
<li>持续集成(Continuous Integration)</li>
<li>持续测试（Continuous Testing）</li>
<li>持续交付（Continuous Delivery）</li>
<li>持续监控(Continuous Monitoring)</li>
</ul>
<p>总结起来就是学习一堆运维方面的工具。</p>
<p><strong> 自动化配置管理 </strong></p>
<ul>
<li>Ansible</li>
<li>CFEngine</li>
<li>Chef</li>
<li>Puppet</li>
<li>SaltStack</li>
<li>RANCID</li>
<li>Ubuntu Juju</li>
</ul>
<p><strong> 持续集成 </strong></p>
<ul>
<li>版本控制 SVN/Git</li>
<li>simicity</li>
<li>Jenkins</li>
<li>Travis</li>
<li>BuildHive</li>
</ul>
<p><strong> 持续交付 </strong></p>
<ul>
<li>Capistrano</li>
<li>Fabric</li>
<li>Ansible</li>
<li>Jenkins</li>
</ul>
<p><strong> 持续监控 </strong></p>
<ul>
<li>New Relic APM（code-level,监控性能问题）</li>
<li>New Relic Server (infrastructure-level，监控cpu内存之类)</li>
</ul>
<p><strong> 其他 </strong></p>
<ul>
<li>Vagrant</li>
<li>Docker</li>
</ul>
<h4 id="Vagrant_&amp;_Docker">Vagrant &amp; Docker</h4><p>差点跑题了，立马打住，以上只是为了介绍DevOps这个概念，其实主要是为了引出Vagrant和Docker，这两个DevOps工具。这两个工具的核心思想就是，”一次配置,到处运行”,这个正好能够解决背景中提出的第四个需求。</p>
<p>Vagrant是一个虚拟机管理软件，然而并没有什么卵高级的，但是他还是给DevOps提供了不少帮助，它与普通的虚拟机（像VMWare/VritualBox/Parallels）相比，它的虚拟机经过裁剪，更节省内存，所有的操作通过vagrant命令进行，非常适合喜爱命令行的用户。与Docker相比，它的使用逻辑更符合传统的虚拟机的做法。</p>
<p>Docker的使用不像是传统的虚拟机桌面软件，并且默认不支持ssh登陆，所以使用逻辑有点怪异，毕竟Docker较Vagrant的优势在于在生产环境下的高效性能。</p>
<p>关于Vagrant和Docker该用哪个，其实两者并不冲突，或者某些场景两个可以结合起来使用。<br>StackOverflow上有Vagrant作者Mitchell和Docker作者Solomon关于他们的对比和应用场景介绍。见<a href="http://stackoverflow.com/questions/16647069/should-i-use-vagrant-or-docker-io-for-creating-an-isolated-environment" target="_blank" rel="external">Should I use Vagrant or Docker.io for creating an isolated environment?</a></p>
<h3 id="Reference">Reference</h3><ul>
<li><a href="http://www.odin.com/fileadmin/media/hcap/pcs/documents/ParCloudStorage_Mini_WP_EN_042014.pdf" target="_blank" rel="external">What is all the container hype?</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>其实DevOps和虚拟化并没有多大关系，为什么要把这两个东西放在一起呢？如果有人跟我突兀的讲这两个词，我会联想到docker。其实也就是因为docker才有了这篇文章。此文只是简单的介绍，以后会抽出时间专门来分别介绍虚拟化技术、DevOps还有Docker。</p>
<h3]]>
    </summary>
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
      <category term="virtualization" scheme="http://yoursite.com/tags/virtualization/"/>
    
      <category term="Tech" scheme="http://yoursite.com/categories/Tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[c++资源管理经验谈]]></title>
    <link href="http://yoursite.com/2015/07/20/c-%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E7%BB%8F%E9%AA%8C%E8%B0%88/"/>
    <id>http://yoursite.com/2015/07/20/c-资源管理经验谈/</id>
    <published>2015-07-19T17:47:32.000Z</published>
    <updated>2015-07-26T16:32:47.000Z</updated>
    <content type="html"><![CDATA[<h3 id="前言">前言</h3><p>编写中…</p>
<h3 id="Step1:_用对象管理资源">Step1: 用对象管理资源</h3><h3 id="Step2:_RAII原则来申请和释放资源">Step2: RAII原则来申请和释放资源</h3><ul>
<li>在构造的时候申请资源，在析构的时候释放资源</li>
</ul>
<h3 id="Step3:_管理好对象的生命周期">Step3: 管理好对象的生命周期</h3><p>管理好对象的生命周期，对于单线程环境来说比较好办，注意几点就行了，但是对于多线程环境就比较难处理了。</p>
<h4 id="构造">构造</h4><ul>
<li>不要在构造函数中暴露this指针，典型的不要调用观察者或者访问者接口，因为这个时候对象还没有构造完，不应该被调用</li>
</ul>
<h4 id="析构">析构</h4><ul>
<li>不要在析构函数中抛出异常,异常会改变程序执行的顺序。</li>
<li>父类析构函数应该定义为virtual,否则子类独有的资源不会被释放.</li>
</ul>
<h4 id="赋值">赋值</h4><p>首先回顾一下赋值操作符的四个要点：</p>
<ul>
<li>检查是否为同一个地址<code>if(this == &amp;rhs) return *this</code></li>
<li>参数为类型的常引用<code>const Feature&amp; rhs</code></li>
<li>返回为<code>*this</code></li>
<li>在分配资源之前先回收清理原有的资源</li>
</ul>
<h4 id="拷贝构造">拷贝构造</h4><h3 id="关于内存管理">关于内存管理</h3><p>C++中可能出现的内存问题:</p>
<ul>
<li>缓冲区溢出</li>
<li>空悬指针/野指针</li>
<li>重复释放</li>
<li>内存泄漏</li>
<li>不配对的new/delete</li>
<li>内存碎片</li>
</ul>
<h3 id="关于链接管理">关于链接管理</h3><p>SVDE中的连接</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="前言">前言</h3><p>编写中…</p>
<h3 id="Step1:_用对象管理资源">Step1: 用对象管理资源</h3><h3 id="Step2:_RAII原则来申请和释放资源">Step2: RAII原则来申请和释放资源</h3><ul>
<li>]]>
    </summary>
    
      <category term="c++" scheme="http://yoursite.com/tags/c/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[数据库存储管理]]></title>
    <link href="http://yoursite.com/2015/05/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2015/05/15/数据库存储管理/</id>
    <published>2015-05-15T08:46:56.000Z</published>
    <updated>2015-07-26T16:33:11.000Z</updated>
    <content type="html"><![CDATA[<h3 id="前言">前言</h3><p>本文首先总结一下大神级论文《Architecture of database system》中关于存储管理的介绍。因为我用PostgreSQL比较多一点，查了一些资料，之后介绍一下PostgreSQL的存储管理方面的内容。</p>
<h3 id="Joseph_M_讲存储管理">Joseph M 讲存储管理</h3><p>在“Architecture of Database System”中，Joseph介绍说在如今的商业DBMS中，主要有两种基本类型的DBMS存储管理器：</p>
<ul>
<li>DBMS直接与底层的面向磁盘的块模式设备驱动程序进行交互（又称为原始模式访问）</li>
<li>DBMS使用标准的OS文件系统设施</li>
</ul>
<p>以上两中存储管理的不同会从空间和时间上同时影响DBMS控制存储的能力：</p>
<ul>
<li>空间：数据在物理磁盘上的位置</li>
<li>时间：什么时候被物理的写到磁盘</li>
</ul>
<h4 id="空间控制_(磁盘,_外存)">空间控制 (磁盘, 外存)</h4><p>从磁盘中读取和写入数据时，顺序读写带宽要比随机读写带宽快10到100倍，并且这个差距还在增加。因此，对于DBMS存储管理器来说，如何把数据块放置在磁盘上就显得尤其重要，从而使得需要访问大量数据的查询可以顺序地访问磁盘。</p>
<h5 id="原始访问模式">原始访问模式</h5><p>DBMS控制局部性最好的方式，就是将数据直接存储到“原始”磁盘设备中，完全绕过文件系统。这种方法可行，但是有一些缺点：</p>
<ul>
<li>它需要数据库管理员将整个磁盘分区都分配给数据库管理系统。</li>
<li>“原始磁盘”的访问接口往往是与特定操作系统相关，这使得DBMS的可移植性变的很差。</li>
</ul>
<h5 id="文件系统访问">文件系统访问</h5><p>原始磁盘访问的一种替代方式是，由DBMS在操作系统的文件管理系统中创建一个非常大的文件，然后采用数据在文件中的地址偏移量来定位数据。<br>在大多数流行的文件系统中，如果你分配一个非常大的文件到一个空磁盘上，文件中的地址将会和存储位置的物理临近性非常吻合。因此，这是一个原始磁盘访问的很好的金丝方法，而不需要直接访问原始设备借口。</p>
<h5 id="性能比较">性能比较</h5><p>运行TPC-C测试基准时候，文件系统访问相交于原始访问只有6%性能降低，而对于较少包含密集IO的工作负载而言，几乎没有负面影响。DB2网上的一份测试报告现实，当使用直接IO(DIO)和它的变种并发IO(CIO)时，文件系统开销可以降低至1%。因此，数据库管理系统厂商通常不再推荐原始数据存储，而且很少用户会使用这种配置。</p>
<h4 id="时间控制_(缓冲,内存)">时间控制 (缓冲,内存)</h4><p>一个DBMS还必须控制数据什么时候被物理地写到磁盘中,DBMS中包含了关键的逻辑程序，它可以判断什么时候把数据写入磁盘。大多数操作系统的文件系统还提供内置的IO缓冲机制，来决定何时读取和写入文件块。<br>如果DBMS在执行写操作时使用标准的文件系统借口，操作系统缓冲机制将会打乱DBMS逻辑程序的意图，因为，操作系统缓冲机制会悄悄地推迟DBMS写操作或者重新排序写操作。不能保证对磁盘写操作的时间的显示控制，这可能带来一下问题：</p>
<ul>
<li>数据库ACID事务承诺的正确性 (不能保证WAL已经写入到磁盘)</li>
<li>性能（文件系统基于物理位置局部性的“预读取”和“后写入”不适合DBMS,DBMS使用比如B树叶子节点的索引局部性，不一定是聚集索引，所以不一定物理相邻）</li>
<li>双缓冲和内存拷贝的昂贵CPU开销 (文件系统到RDBMS缓冲的拷贝, 可以使用POSIX mmap或特定平台的DIO和CIO来避免对文件的双缓冲)</li>
</ul>
<h5 id="缓冲管理">缓冲管理</h5><p>为了提供对数据库页面的有效访问，每个数据库管理系统会在自己的内存空间中实现一个大型共享缓冲池。<br>缓冲池会被组织成一个帧数组，其中，每一帧是内存中的一段区域，帧的大小是数据库磁盘块的大小。块从磁盘直接复制到缓冲池中，不会发生格式的变化，在内存中也是以这种原生的格式进行修改操作，然后，写回到磁盘。</p>
<p>和缓冲池中的帧数相关联的是一个哈希表，它会对以下内容进行哈希映射：</p>
<ul>
<li>把内存中当前的页面编号映射到它们在帧表中的位置</li>
<li>页面在备份磁盘存储中的位置</li>
<li>关于该页面的一些元数据（脏标记位：标识从磁盘读出来之后是否发生改变；页面替换策略所需要的信息；引脚计数器）</li>
</ul>
<h3 id="PostgreSQL_存储管理">PostgreSQL 存储管理</h3>]]></content>
    <summary type="html">
    <![CDATA[<h3 id="前言">前言</h3><p>本文首先总结一下大神级论文《Architecture of database system》中关于存储管理的介绍。因为我用PostgreSQL比较多一点，查了一些资料，之后介绍一下PostgreSQL的存储管理方面的内容。</p>
<h]]>
    </summary>
    
      <category term="database" scheme="http://yoursite.com/tags/database/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[用PL/pgSQL对osm数据进行矢量分级]]></title>
    <link href="http://yoursite.com/2015/03/14/GIS/%E7%94%A8PL-pgSQL%E5%AF%B9osm%E6%95%B0%E6%8D%AE%E8%BF%9B%E8%A1%8C%E7%9F%A2%E9%87%8F%E5%88%86%E7%BA%A7/"/>
    <id>http://yoursite.com/2015/03/14/GIS/用PL-pgSQL对osm数据进行矢量分级/</id>
    <published>2015-03-14T01:45:06.000Z</published>
    <updated>2015-07-26T16:46:33.000Z</updated>
    <content type="html"><![CDATA[<h3 id="执行总流程介绍">执行总流程介绍</h3><p>Perform-sql-updates.sql是总执行脚本</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="shebang">#!/bin/bash</span><br><span class="line"></span></span><br><span class="line"><span class="comment"># subsequent sql depends on functions installed</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Creating functions..."</span></span><br><span class="line">psql <span class="variable">$@</span> <span class="operator">-f</span> functions.sql</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"done."</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># apply updates in parallel across tables</span></span><br><span class="line"><span class="built_in">echo</span> <span class="operator">-e</span> <span class="string">"\nApplying updates in parallel across tables..."</span></span><br><span class="line">psql <span class="variable">$@</span> <span class="operator">-f</span> apply-updates-non-planet-tables.sql &amp;</span><br><span class="line">psql <span class="variable">$@</span> <span class="operator">-f</span> apply-planet_osm_polygon.sql &amp;</span><br><span class="line">psql <span class="variable">$@</span> <span class="operator">-f</span> apply-planet_osm_line.sql &amp;</span><br><span class="line">psql <span class="variable">$@</span> <span class="operator">-f</span> apply-planet_osm_point.sql &amp;</span><br><span class="line"><span class="built_in">wait</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"done."</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="operator">-e</span> <span class="string">'\nApplying triggers...'</span></span><br><span class="line">psql <span class="variable">$@</span> <span class="operator">-f</span> triggers.sql</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'done.'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="operator">-e</span> <span class="string">"\nAll updates complete. Exiting."</span></span><br></pre></td></tr></table></figure>
<p>这是总的执行脚本，干了一下几件事：</p>
<ol>
<li>导入了一些函数，这些函数在之后的sql处理中会用到</li>
<li>对point, line, polygon几个表分别进行了处理，会在下面详细介绍</li>
<li>导入必要的触发器</li>
</ol>
<h3 id="对non-planet表进行处理">对non-planet表进行处理</h3><p>apply-updates-non-planet-tables.sql</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">DO</span> $$</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- add way_area columns to all tables that use it</span></span><br><span class="line">PERFORM mz_add_area_column(<span class="string">'ne_110m_ocean'</span>, <span class="string">'way_area'</span>, <span class="string">'the_geom'</span>);</span></span><br><span class="line">PERFORM mz_add_area_column('ne_110m_lakes', 'way_area', 'the_geom');</span><br><span class="line">PERFORM mz_add_area_column('ne_50m_ocean', 'way_area', 'the_geom');</span><br><span class="line">PERFORM mz_add_area_column('ne_50m_lakes', 'way_area', 'the_geom');</span><br><span class="line">PERFORM mz_add_area_column('ne_50m_playas', 'way_area', 'the_geom');</span><br><span class="line">PERFORM mz_add_area_column('ne_10m_ocean', 'way_area', 'the_geom');</span><br><span class="line">PERFORM mz_add_area_column('ne_10m_lakes', 'way_area', 'the_geom');</span><br><span class="line">PERFORM mz_add_area_column('ne_10m_playas', 'way_area', 'the_geom');</span><br><span class="line">PERFORM mz_add_area_column('water_polygons', 'way_area', 'the_geom');</span><br><span class="line">PERFORM mz_add_area_column('ne_10m_urban_areas', 'way_area', 'the_geom');</span><br><span class="line">PERFORM mz_add_area_column('ne_50m_urban_areas', 'way_area', 'the_geom');</span><br><span class="line">PERFORM mz_add_area_column('ne_10m_parks_and_protected_lands', 'way_area', 'the_geom');</span><br><span class="line"></span><br><span class="line"><span class="comment">-- way_area indexes</span></span><br><span class="line">PERFORM mz_create_index_if_not_exists('ne_110m_ocean_wayarea_index', 'ne_110m_ocean', 'way_area');</span><br><span class="line">PERFORM mz_create_index_if_not_exists('ne_110m_lakes_wayarea_index', 'ne_110m_lakes', 'way_area');</span><br><span class="line">PERFORM mz_create_index_if_not_exists('ne_50m_ocean_wayarea_index', 'ne_50m_ocean', 'way_area');</span><br><span class="line">PERFORM mz_create_index_if_not_exists('ne_50m_lakes_wayarea_index', 'ne_50m_lakes', 'way_area');</span><br><span class="line">PERFORM mz_create_index_if_not_exists('ne_50m_playas_wayarea_index', 'ne_50m_playas', 'way_area');</span><br><span class="line">PERFORM mz_create_index_if_not_exists('ne_50m_urban_areas_way_area_index', 'ne_50m_urban_areas', 'way_area');</span><br><span class="line">PERFORM mz_create_index_if_not_exists('ne_10m_ocean_wayarea_index', 'ne_10m_ocean', 'way_area');</span><br><span class="line">PERFORM mz_create_index_if_not_exists('ne_10m_lakes_wayarea_index', 'ne_10m_lakes', 'way_area');</span><br><span class="line">PERFORM mz_create_index_if_not_exists('ne_10m_playas_wayarea_index', 'ne_10m_playas', 'way_area');</span><br><span class="line">PERFORM mz_create_index_if_not_exists('ne_10m_urban_areas_way_area_index', 'ne_10m_urban_areas', 'way_area');</span><br><span class="line">PERFORM mz_create_index_if_not_exists('ne_10m_parks_and_protected_lands_way_area_index', 'ne_10m_parks_and_protected_lands', 'way_area');</span><br><span class="line">PERFORM mz_create_index_if_not_exists('water_polygons_wayarea_index', 'water_polygons', 'way_area');</span><br><span class="line"></span><br><span class="line"><span class="comment">-- additional updates</span></span><br><span class="line">PERFORM mz_create_index_if_not_exists('ne_10m_populated_places_scalerank_index', 'ne_10m_populated_places', 'scalerank');</span><br><span class="line"></span><br><span class="line">PERFORM AddGeometryColumn('ne_50m_urban_areas', 'mz_centroid', 900913, 'Geometry', 2);</span><br><span class="line"><span class="operator"><span class="keyword">UPDATE</span> ne_50m_urban_areas <span class="keyword">SET</span> mz_centroid=ST_Centroid(the_geom);</span></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> ne_50m_urban_areas_centroid_index <span class="keyword">ON</span> ne_50m_urban_areas <span class="keyword">USING</span> gist(mz_centroid);</span></span><br><span class="line"></span><br><span class="line">PERFORM AddGeometryColumn('ne_10m_parks_and_protected_lands', 'mz_centroid', 900913, 'Geometry', 2);</span><br><span class="line"><span class="operator"><span class="keyword">UPDATE</span> ne_10m_parks_and_protected_lands <span class="keyword">SET</span> mz_centroid=ST_Centroid(the_geom);</span></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> ne_10m_parks_and_protected_lands_centroid_index <span class="keyword">ON</span> ne_10m_parks_and_protected_lands <span class="keyword">USING</span> gist(mz_centroid);</span></span><br><span class="line"></span><br><span class="line">PERFORM AddGeometryColumn('ne_10m_urban_areas', 'mz_centroid', 900913, 'Geometry', 2);</span><br><span class="line"><span class="operator"><span class="keyword">UPDATE</span> ne_10m_urban_areas <span class="keyword">SET</span> mz_centroid=ST_Centroid(the_geom);</span></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> ne_10m_urban_areas_centroid_index <span class="keyword">ON</span> ne_10m_urban_areas <span class="keyword">USING</span> gist(mz_centroid);</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">END</span> $$;</span></span><br></pre></td></tr></table></figure>
<h3 id="对planet_osm_polygon表做处理">对planet_osm_polygon表做处理</h3><p>apply_planet_osm_polygon.sql</p>
<p>对于面的处理向较与point和line来说算是比较复杂，因为需要对面进行抽希处理。抽希处理需要在两个方面进行：</p>
<ul>
<li>去掉一些不必要的Feature。</li>
<li>对与一个Feature，去掉其Geometry的一些点。</li>
</ul>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">DO</span> $$</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">-- planet_osm_polygon</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- indexes on existing columns</span></span><br><span class="line">PERFORM mz_create_index_if_not_exists(<span class="string">'planet_osm_polygon_wayarea_index'</span>, <span class="string">'planet_osm_polygon'</span>, <span class="string">'way_area'</span>);</span></span><br><span class="line">PERFORM mz_create_partial_index_if_not_exists('planet_osm_polygon_building_index', 'planet_osm_polygon', 'building', 'building IS NOT NULL');</span><br><span class="line">PERFORM mz_create_partial_index_if_not_exists('planet_osm_polygon_admin_level_index', 'planet_osm_polygon', 'admin_level', 'boundary = ''administrative''');</span><br><span class="line"></span><br><span class="line"><span class="comment">-- indexes on functions</span></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> planet_osm_polygon_is_building_or_part_index <span class="keyword">ON</span> planet_osm_polygon(mz_calculate_is_building_or_part(building, <span class="string">"building:part"</span>)) <span class="keyword">WHERE</span> mz_calculate_is_building_or_part(building, <span class="string">"building:part"</span>) = <span class="literal">TRUE</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> planet_osm_polygon_is_water_index <span class="keyword">ON</span> planet_osm_polygon(mz_calculate_is_water(<span class="string">"waterway"</span>, <span class="string">"natural"</span>, <span class="string">"landuse"</span>)) <span class="keyword">WHERE</span> mz_calculate_is_water(<span class="string">"waterway"</span>, <span class="string">"natural"</span>, <span class="string">"landuse"</span>) = <span class="literal">TRUE</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- update polygon table to add centroids</span></span><br><span class="line"><span class="operator"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> planet_osm_polygon <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> mz_is_landuse <span class="built_in">BOOLEAN</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> planet_osm_polygon <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> mz_centroid GEOMETRY;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- at the moment we only add centroids to landuse features</span></span><br><span class="line"><span class="operator"><span class="keyword">UPDATE</span> planet_osm_polygon <span class="keyword">SET</span></span><br><span class="line">    mz_is_landuse = <span class="literal">TRUE</span>,</span><br><span class="line">    mz_centroid = ST_Centroid(way)</span><br><span class="line">    <span class="keyword">WHERE</span> mz_calculate_is_landuse(<span class="string">"landuse"</span>, <span class="string">"leisure"</span>, <span class="string">"natural"</span>, <span class="string">"highway"</span>, <span class="string">"amenity"</span>, <span class="string">"aeroway"</span>) = <span class="literal">TRUE</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- indexes for centroid queries</span></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> planet_osm_polygon_is_landuse_col_index <span class="keyword">ON</span> planet_osm_polygon(mz_is_landuse) <span class="keyword">WHERE</span> mz_is_landuse=<span class="literal">TRUE</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> planet_osm_polygon_centroid_landuse_index <span class="keyword">ON</span> planet_osm_polygon <span class="keyword">USING</span> gist(mz_centroid) <span class="keyword">WHERE</span> mz_is_landuse=<span class="literal">TRUE</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">END</span> $$;</span></span><br></pre></td></tr></table></figure>
<h3 id="对planet_osm_point表做处理">对planet_osm_point表做处理</h3><p>apply-planet_osm_point.sql</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">DO</span> $$</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">-- planet_osm_point</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> planet_osm_point_place_index <span class="keyword">ON</span> planet_osm_point(place) <span class="keyword">WHERE</span> name <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">AND</span> place <span class="keyword">IN</span> (<span class="string">'city'</span>, <span class="string">'continent'</span>, <span class="string">'country'</span>, <span class="string">'county'</span>, <span class="string">'district'</span>, <span class="string">'hamlet'</span>, <span class="string">'island'</span>, <span class="string">'isolated_dwelling'</span>, <span class="string">'lake'</span>, <span class="string">'locality'</span>, <span class="string">'neighbourhood'</span>, <span class="string">'ocean'</span>, <span class="string">'province'</span>, <span class="string">'sea'</span>, <span class="string">'state'</span>, <span class="string">'suburb'</span>, <span class="string">'town'</span>, <span class="string">'village'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> planet_osm_point_level_index <span class="keyword">ON</span> planet_osm_point(mz_calculate_poi_level(<span class="string">"aerialway"</span>, <span class="string">"aeroway"</span>, <span class="string">"amenity"</span>, <span class="string">"barrier"</span>, <span class="string">"highway"</span>, <span class="string">"historic"</span>, <span class="string">"leisure"</span>, <span class="string">"lock"</span>, <span class="string">"man_made"</span>, <span class="string">"natural"</span>, <span class="string">"power"</span>, <span class="string">"railway"</span>, <span class="string">"shop"</span>, <span class="string">"tourism"</span>, <span class="string">"waterway"</span>)) <span class="keyword">WHERE</span> mz_calculate_poi_level(<span class="string">"aerialway"</span>, <span class="string">"aeroway"</span>, <span class="string">"amenity"</span>, <span class="string">"barrier"</span>, <span class="string">"highway"</span>, <span class="string">"historic"</span>, <span class="string">"leisure"</span>, <span class="string">"lock"</span>, <span class="string">"man_made"</span>, <span class="string">"natural"</span>, <span class="string">"power"</span>, <span class="string">"railway"</span>, <span class="string">"shop"</span>, <span class="string">"tourism"</span>, <span class="string">"waterway"</span>) <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">END</span> $$;</span></span><br></pre></td></tr></table></figure>
<h3 id="对planet_osm_line表做处理">对planet_osm_line表做处理</h3><p>apply-planet_osm_line.sql</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">DO</span> $$</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">-- planet_osm_line</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- indexes on existing columns</span></span><br><span class="line">PERFORM mz_create_partial_index_if_not_exists(<span class="string">'planet_osm_line_waterway'</span>, <span class="string">'planet_osm_line'</span>, <span class="string">'waterway'</span>, <span class="string">'waterway IS NOT NULL'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- indexes on functions</span></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> planet_osm_line_road_level_index <span class="keyword">ON</span> planet_osm_line(mz_calculate_road_level(highway, railway, aeroway)) <span class="keyword">WHERE</span> mz_calculate_road_level(highway, railway, aeroway) <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">END</span> $$;</span></span><br></pre></td></tr></table></figure>
<h3 id="导入的函数">导入的函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">--               mz_does_index_exist()</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- used to check whether an index exists before adding</span></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> mz_does_index_exist(index_name <span class="built_in">text</span>)</span><br><span class="line"><span class="keyword">RETURNS</span> <span class="built_in">BOOLEAN</span> <span class="keyword">AS</span> $$</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">RETURN</span> <span class="keyword">EXISTS</span> (</span><br><span class="line">        <span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> pg_class <span class="keyword">AS</span> c</span><br><span class="line">        <span class="keyword">INNER</span> <span class="keyword">JOIN</span> pg_namespace <span class="keyword">AS</span> n <span class="keyword">ON</span> n.oid = c.relnamespace</span><br><span class="line">        <span class="keyword">WHERE</span> c.relname = index_name</span><br><span class="line">    );</span></span><br><span class="line"><span class="operator"><span class="keyword">END</span>;</span></span><br><span class="line">$$ LANGUAGE plpgsql STABLE;</span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">--               mz_does_trigger_exist()</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> mz_does_trigger_exist(trigger_name <span class="built_in">text</span>, table_name <span class="built_in">text</span>)</span><br><span class="line"><span class="keyword">RETURNS</span> <span class="built_in">BOOLEAN</span> <span class="keyword">AS</span> $$</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">RETURN</span> <span class="keyword">EXISTS</span>(</span><br><span class="line">        <span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> pg_class <span class="keyword">AS</span> c</span><br><span class="line">        <span class="keyword">INNER</span> <span class="keyword">JOIN</span> pg_namespace <span class="keyword">AS</span> n <span class="keyword">ON</span> n.oid = c.relnamespace</span><br><span class="line">        <span class="keyword">INNER</span> <span class="keyword">JOIN</span> pg_trigger <span class="keyword">AS</span> t <span class="keyword">ON</span> t.tgrelid = c.oid</span><br><span class="line">        <span class="keyword">WHERE</span> c.relname = table_name</span><br><span class="line">          <span class="keyword">AND</span> t.tgname = trigger_name</span><br><span class="line">    );</span></span><br><span class="line"><span class="operator"><span class="keyword">END</span>;</span></span><br><span class="line">$$ LANGUAGE plpgsql STABLE;</span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">--               mz_create_index_if_not_exists()</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> mz_create_index_if_not_exists(index_name <span class="built_in">text</span>, table_name <span class="built_in">text</span>, column_name <span class="built_in">text</span>)</span><br><span class="line"><span class="keyword">RETURNS</span> VOID <span class="keyword">AS</span> $$</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">IF</span> <span class="keyword">NOT</span> mz_does_index_exist(index_name) <span class="keyword">THEN</span></span><br><span class="line">        <span class="keyword">EXECUTE</span> <span class="string">'CREATE INDEX '</span> ||</span><br><span class="line">            quote_ident(index_name) || <span class="string">' ON '</span> || quote_ident(table_name) ||</span><br><span class="line">            <span class="string">'('</span> || quote_ident(column_name) || <span class="string">')'</span>;</span></span><br><span class="line">    <span class="operator"><span class="keyword">END</span> <span class="keyword">IF</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">END</span>;</span></span><br><span class="line">$$ LANGUAGE plpgsql VOLATILE;</span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">--               mz_create_partial_index_if_not_exists()</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> mz_create_partial_index_if_not_exists(index_name <span class="built_in">text</span>, table_name <span class="built_in">text</span>, column_name <span class="built_in">text</span>, where_clause <span class="built_in">text</span>)</span><br><span class="line"><span class="keyword">RETURNS</span> VOID <span class="keyword">AS</span> $$</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">IF</span> <span class="keyword">NOT</span> mz_does_index_exist(index_name) <span class="keyword">THEN</span></span><br><span class="line">        <span class="keyword">EXECUTE</span> <span class="string">'CREATE INDEX '</span> ||</span><br><span class="line">            quote_ident(index_name) || <span class="string">' ON '</span> || quote_ident(table_name) ||</span><br><span class="line">            <span class="string">'('</span> || quote_ident(column_name) || <span class="string">') WHERE '</span> || where_clause;</span></span><br><span class="line">    <span class="operator"><span class="keyword">END</span> <span class="keyword">IF</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">END</span>;</span></span><br><span class="line">$$ LANGUAGE plpgsql VOLATILE;</span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">--               mz_create_trigger_if_not_exists()</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> mz_create_trigger_if_not_exists(</span><br><span class="line">    trigger_name <span class="built_in">text</span>, table_name <span class="built_in">text</span>, function_name <span class="built_in">text</span>)</span><br><span class="line"><span class="keyword">RETURNS</span> VOID <span class="keyword">AS</span> $$</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">IF</span> <span class="keyword">NOT</span> mz_does_trigger_exist(trigger_name, table_name) <span class="keyword">THEN</span></span><br><span class="line">        <span class="keyword">EXECUTE</span> <span class="string">'CREATE TRIGGER '</span> || quote_ident(trigger_name) ||</span><br><span class="line">          <span class="string">' BEFORE INSERT OR UPDATE ON '</span> || quote_ident(table_name) ||</span><br><span class="line">          <span class="string">' FOR EACH ROW EXECUTE PROCEDURE '</span> || quote_ident(function_name) || <span class="string">'()'</span>;</span></span><br><span class="line">    <span class="operator"><span class="keyword">END</span> <span class="keyword">IF</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">END</span>;</span></span><br><span class="line">$$ LANGUAGE plpgsql VOLATILE;</span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">--               mz_does_column_exist()</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> mz_does_column_exist(input_table_name <span class="built_in">text</span>, input_column_name <span class="built_in">text</span>)</span><br><span class="line"><span class="keyword">RETURNS</span> <span class="built_in">BOOLEAN</span> <span class="keyword">AS</span> $$</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">RETURN</span> <span class="keyword">EXISTS</span> (</span><br><span class="line">        <span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> information_schema.<span class="keyword">columns</span></span><br><span class="line">        <span class="keyword">WHERE</span> table_name=input_table_name <span class="keyword">AND</span> column_name=input_column_name</span><br><span class="line">    );</span></span><br><span class="line"><span class="operator"><span class="keyword">END</span>;</span></span><br><span class="line">$$ LANGUAGE plpgsql STABLE;</span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">--               mz_add_simplified_geometry_column()</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> mz_add_simplified_geometry_column(</span><br><span class="line">    table_name <span class="built_in">text</span>, column_name <span class="built_in">text</span>, existing_geom_column_name <span class="built_in">text</span>, geom_type <span class="built_in">text</span>, tolerance <span class="built_in">float</span>, where_clause <span class="built_in">text</span> <span class="keyword">default</span> <span class="literal">NULL</span>)</span><br><span class="line"><span class="keyword">RETURNS</span> VOID <span class="keyword">AS</span> $$</span><br><span class="line"><span class="keyword">DECLARE</span> v_where_clause <span class="built_in">TEXT</span> <span class="keyword">DEFAULT</span> <span class="string">''</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">DECLARE</span> v_index_where <span class="built_in">TEXT</span> <span class="keyword">DEFAULT</span> <span class="string">''</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">IF</span> <span class="keyword">NOT</span> mz_does_column_exist(table_name, column_name) <span class="keyword">THEN</span></span><br><span class="line">        PERFORM AddGeometryColumn(table_name, column_name, <span class="number">900913</span>, geom_type, <span class="number">2</span>);</span></span><br><span class="line">        IF where_clause IS NOT NULL THEN</span><br><span class="line">            v_where_clause := ' AND ' || where_clause;</span><br><span class="line">            v_index_where := ' WHERE ' || where_clause;</span><br><span class="line">        <span class="operator"><span class="keyword">END</span> <span class="keyword">IF</span>;</span></span><br><span class="line">        <span class="operator"><span class="keyword">EXECUTE</span> <span class="string">'UPDATE '</span> || quote_ident(table_name) ||</span><br><span class="line">            <span class="string">' SET '</span> || quote_ident(column_name) ||</span><br><span class="line">            <span class="string">'=ST_SimplifyPreserveTopology('</span> || quote_ident(existing_geom_column_name) ||</span><br><span class="line">            <span class="string">', '</span> || tolerance || <span class="string">')'</span> ||</span><br><span class="line">            <span class="string">' WHERE '</span> || quote_ident(existing_geom_column_name) || <span class="string">' IS NOT NULL'</span> ||</span><br><span class="line">            v_where_clause;</span></span><br><span class="line">        <span class="operator"><span class="keyword">EXECUTE</span> <span class="string">'CREATE INDEX '</span> || quote_ident(table_name || <span class="string">'_'</span> || column_name) ||</span><br><span class="line">            <span class="string">' ON '</span> || quote_ident(table_name) || <span class="string">' USING gist('</span> || quote_ident(column_name) || <span class="string">')'</span> ||</span><br><span class="line">            v_index_where;</span></span><br><span class="line">    <span class="operator"><span class="keyword">END</span> <span class="keyword">IF</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">END</span>;</span></span><br><span class="line">$$ LANGUAGE plpgsql VOLATILE;</span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">--               mz_safe_convert_to_float()</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> mz_safe_convert_to_float(v_input <span class="built_in">text</span>)</span><br><span class="line"><span class="keyword">RETURNS</span> <span class="built_in">FLOAT</span> <span class="keyword">AS</span> $$</span><br><span class="line"><span class="keyword">DECLARE</span> v_float_value <span class="built_in">FLOAT</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">BEGIN</span></span><br><span class="line">        v_float_value := TO_NUMBER(</span><br><span class="line">            <span class="keyword">REPLACE</span>(<span class="keyword">REPLACE</span>(v_input, <span class="string">';'</span>, <span class="string">'.'</span>), <span class="string">','</span>, <span class="string">'.'</span>),</span><br><span class="line">            <span class="string">'999999D99S'</span>) <span class="keyword">AS</span> <span class="built_in">FLOAT</span>;</span></span><br><span class="line">    EXCEPTION WHEN OTHERS THEN</span><br><span class="line">        RETURN NULL;</span><br><span class="line">    <span class="operator"><span class="keyword">END</span>;</span></span><br><span class="line">    RETURN v_float_value;</span><br><span class="line"><span class="operator"><span class="keyword">END</span>;</span></span><br><span class="line">$$ LANGUAGE plpgsql IMMUTABLE;</span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">--               mz_normalize_id()</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> mz_normalize_id(id <span class="built_in">bigint</span>, geom Geometry)</span><br><span class="line"><span class="keyword">RETURNS</span> <span class="built_in">TEXT</span> <span class="keyword">AS</span> $$</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">IF</span> id &lt; <span class="number">0</span> <span class="keyword">THEN</span></span><br><span class="line">        <span class="keyword">RETURN</span> <span class="keyword">Substr</span>(<span class="keyword">MD5</span>(ST_AsBinary(geom)), <span class="number">1</span>, <span class="number">10</span>);</span></span><br><span class="line">    ELSE</span><br><span class="line">        RETURN id::text;</span><br><span class="line">    <span class="operator"><span class="keyword">END</span> <span class="keyword">IF</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">END</span>;</span></span><br><span class="line">$$ LANGUAGE plpgsql STABLE;</span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">--               mz_add_normalized_id()</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> mz_add_normalized_id(</span><br><span class="line">    table_name <span class="built_in">text</span>, column_name <span class="built_in">text</span>, geom_name <span class="built_in">text</span>, prev_id_column_name <span class="built_in">text</span>)</span><br><span class="line"><span class="keyword">RETURNS</span> VOID <span class="keyword">AS</span> $$</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">IF</span> <span class="keyword">NOT</span> mz_does_column_exist(table_name, column_name) <span class="keyword">THEN</span></span><br><span class="line">        <span class="keyword">EXECUTE</span> <span class="string">'ALTER TABLE '</span> || quote_ident(table_name) ||</span><br><span class="line">                <span class="string">' ADD COLUMN '</span> || quote_ident(column_name) ||</span><br><span class="line">                <span class="string">' TEXT'</span>;</span></span><br><span class="line">        <span class="operator"><span class="keyword">EXECUTE</span> <span class="string">'UPDATE '</span> || quote_ident(table_name) ||</span><br><span class="line">                <span class="string">' SET '</span> || quote_ident(column_name) ||</span><br><span class="line">                <span class="string">' = mz_normalize_id('</span> || quote_ident(prev_id_column_name) ||</span><br><span class="line">                <span class="string">', '</span> || quote_ident(geom_name) || <span class="string">')'</span> ||</span><br><span class="line">                <span class="string">' WHERE '</span> || quote_ident(prev_id_column_name) || <span class="string">' IS NOT NULL'</span>;</span></span><br><span class="line">    <span class="operator"><span class="keyword">END</span> <span class="keyword">IF</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">END</span>;</span></span><br><span class="line">$$ LANGUAGE plpgsql VOLATILE;</span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">--               mz_add_area_column()</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> mz_add_area_column(table_name <span class="built_in">text</span>, column_name <span class="built_in">text</span>, geom_name <span class="built_in">text</span>)</span><br><span class="line"><span class="keyword">RETURNS</span> VOID <span class="keyword">AS</span> $$</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">IF</span> <span class="keyword">NOT</span> mz_does_column_exist(table_name, column_name) <span class="keyword">THEN</span></span><br><span class="line">        <span class="keyword">EXECUTE</span> <span class="string">'ALTER TABLE '</span> || quote_ident(table_name) ||</span><br><span class="line">                <span class="string">' ADD COLUMN '</span> || quote_ident(column_name) ||</span><br><span class="line">                <span class="string">' REAL'</span>;</span></span><br><span class="line">        <span class="operator"><span class="keyword">EXECUTE</span> <span class="string">'UPDATE '</span> || quote_ident(table_name) || <span class="string">' SET '</span> || quote_ident(column_name) ||</span><br><span class="line">                <span class="string">' = ST_Area('</span> || quote_ident(geom_name) || <span class="string">') '</span> ||</span><br><span class="line">                <span class="string">'WHERE '</span> || quote_ident(geom_name) || <span class="string">' IS NOT NULL'</span>;</span></span><br><span class="line">    <span class="operator"><span class="keyword">END</span> <span class="keyword">IF</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">END</span>;</span></span><br><span class="line">$$ LANGUAGE plpgsql VOLATILE;</span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">--               mz_calculate_is_landuse()</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">-- functions to encapsulate logic for calculating new columns</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> mz_calculate_is_landuse(</span><br><span class="line">    landuse_val <span class="built_in">text</span>, leisure_val <span class="built_in">text</span>, natural_val <span class="built_in">text</span>, highway_val <span class="built_in">text</span>, amenity_val <span class="built_in">text</span>, aeroway_val <span class="built_in">text</span>)</span><br><span class="line"><span class="keyword">RETURNS</span> <span class="built_in">BOOLEAN</span> <span class="keyword">AS</span> $$</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">RETURN</span></span><br><span class="line">        landuse_val <span class="keyword">IN</span> (<span class="string">'park'</span>, <span class="string">'forest'</span>, <span class="string">'residential'</span>, <span class="string">'retail'</span>, <span class="string">'commercial'</span>,</span><br><span class="line">                        <span class="string">'industrial'</span>, <span class="string">'railway'</span>, <span class="string">'cemetery'</span>, <span class="string">'grass'</span>, <span class="string">'farmyard'</span>,</span><br><span class="line">                        <span class="string">'farm'</span>, <span class="string">'farmland'</span>, <span class="string">'wood'</span>, <span class="string">'meadow'</span>, <span class="string">'village_green'</span>,</span><br><span class="line">                        <span class="string">'recreation_ground'</span>, <span class="string">'allotments'</span>, <span class="string">'quarry'</span>)</span><br><span class="line">     <span class="keyword">OR</span> leisure_val <span class="keyword">IN</span> (<span class="string">'park'</span>, <span class="string">'garden'</span>, <span class="string">'playground'</span>, <span class="string">'golf_course'</span>, <span class="string">'sports_centre'</span>,</span><br><span class="line">                        <span class="string">'pitch'</span>, <span class="string">'stadium'</span>, <span class="string">'common'</span>, <span class="string">'nature_reserve'</span>)</span><br><span class="line">     <span class="keyword">OR</span> natural_val <span class="keyword">IN</span> (<span class="string">'wood'</span>, <span class="string">'land'</span>, <span class="string">'scrub'</span>, <span class="string">'wetland'</span>, <span class="string">'glacier'</span>)</span><br><span class="line">     <span class="keyword">OR</span> highway_val <span class="keyword">IN</span> (<span class="string">'pedestrian'</span>, <span class="string">'footway'</span>)</span><br><span class="line">     <span class="keyword">OR</span> amenity_val <span class="keyword">IN</span> (<span class="string">'university'</span>, <span class="string">'school'</span>, <span class="string">'college'</span>, <span class="string">'library'</span>, <span class="string">'fuel'</span>,</span><br><span class="line">                        <span class="string">'parking'</span>, <span class="string">'cinema'</span>, <span class="string">'theatre'</span>, <span class="string">'place_of_worship'</span>, <span class="string">'hospital'</span>)</span><br><span class="line">     <span class="keyword">OR</span> aeroway_val <span class="keyword">IN</span> (<span class="string">'runway'</span>, <span class="string">'taxiway'</span>, <span class="string">'apron'</span>);</span></span><br><span class="line"><span class="operator"><span class="keyword">END</span>;</span></span><br><span class="line">$$ LANGUAGE plpgsql IMMUTABLE;</span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">--               mz_calculate_poi_level()</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> mz_calculate_poi_level(</span><br><span class="line">    aerialway_val <span class="built_in">text</span>,</span><br><span class="line">    aeroway_val <span class="built_in">text</span>,</span><br><span class="line">    amenity_val <span class="built_in">text</span>,</span><br><span class="line">    barrier_val <span class="built_in">text</span>,</span><br><span class="line">    highway_val <span class="built_in">text</span>,</span><br><span class="line">    historic_val <span class="built_in">text</span>,</span><br><span class="line">    leisure_val <span class="built_in">text</span>,</span><br><span class="line">    lock_val <span class="built_in">text</span>,</span><br><span class="line">    man_made_val <span class="built_in">text</span>,</span><br><span class="line">    natural_val <span class="built_in">text</span>,</span><br><span class="line">    power_val <span class="built_in">text</span>,</span><br><span class="line">    railway_val <span class="built_in">text</span>,</span><br><span class="line">    shop_val <span class="built_in">text</span>,</span><br><span class="line">    tourism_val <span class="built_in">text</span>,</span><br><span class="line">    waterway_val <span class="built_in">text</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">RETURNS</span> <span class="built_in">SMALLINT</span> <span class="keyword">AS</span> $$</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">RETURN</span> (</span><br><span class="line">        <span class="keyword">CASE</span> <span class="keyword">WHEN</span> aeroway_val <span class="keyword">IN</span> (<span class="string">'aerodrome'</span>, <span class="string">'airport'</span>) <span class="keyword">THEN</span> <span class="number">9</span></span><br><span class="line">             <span class="keyword">WHEN</span> natural_val <span class="keyword">IN</span> (<span class="string">'peak'</span>, <span class="string">'volcano'</span>) <span class="keyword">THEN</span> <span class="number">11</span></span><br><span class="line">             <span class="keyword">WHEN</span> railway_val <span class="keyword">IN</span> (<span class="string">'station'</span>) <span class="keyword">THEN</span> <span class="number">12</span></span><br><span class="line">             <span class="keyword">WHEN</span> (aerialway_val <span class="keyword">IN</span> (<span class="string">'station'</span>)</span><br><span class="line">                   <span class="keyword">OR</span> railway_val <span class="keyword">IN</span> (<span class="string">'halt'</span>, <span class="string">'tram_stop'</span>)</span><br><span class="line">                   <span class="keyword">OR</span> tourism_val <span class="keyword">IN</span> (<span class="string">'alpine_hut'</span>)) <span class="keyword">THEN</span> <span class="number">13</span></span><br><span class="line">             <span class="keyword">WHEN</span> (natural_val <span class="keyword">IN</span> (<span class="string">'spring'</span>)</span><br><span class="line">                   <span class="keyword">OR</span> railway_val <span class="keyword">IN</span> (<span class="string">'level_crossing'</span>)) <span class="keyword">THEN</span> <span class="number">14</span></span><br><span class="line">             <span class="keyword">WHEN</span> (amenity_val <span class="keyword">IN</span> (<span class="string">'hospital'</span>, <span class="string">'parking'</span>)</span><br><span class="line">                   <span class="keyword">OR</span> barrier_val <span class="keyword">IN</span> (<span class="string">'gate'</span>)</span><br><span class="line">                   <span class="keyword">OR</span> highway_val <span class="keyword">IN</span> (<span class="string">'gate'</span>, <span class="string">'mini_roundabout'</span>)</span><br><span class="line">                   <span class="keyword">OR</span> lock_val <span class="keyword">IN</span> (<span class="string">'yes'</span>)</span><br><span class="line">                   <span class="keyword">OR</span> man_made_val <span class="keyword">IN</span> (<span class="string">'lighthouse'</span>, <span class="string">'power_wind'</span>)</span><br><span class="line">                   <span class="keyword">OR</span> natural_val <span class="keyword">IN</span> (<span class="string">'cave_entrance'</span>)</span><br><span class="line">                   <span class="keyword">OR</span> power_val <span class="keyword">IN</span> (<span class="string">'generator'</span>)</span><br><span class="line">                   <span class="keyword">OR</span> waterway_val <span class="keyword">IN</span> (<span class="string">'lock'</span>)) <span class="keyword">THEN</span> <span class="number">15</span></span><br><span class="line">             <span class="keyword">WHEN</span> (aeroway_val <span class="keyword">IN</span> (<span class="string">'helipad'</span>)</span><br><span class="line">                   <span class="keyword">OR</span> amenity_val <span class="keyword">IN</span> (<span class="string">'biergarten'</span>, <span class="string">'bus_station'</span>, <span class="string">'bus_stop'</span>, <span class="string">'car_sharing'</span>,</span><br><span class="line">                                    <span class="string">'picnic_site'</span>, <span class="string">'place_of_worship'</span>,</span><br><span class="line">                                    <span class="string">'prison'</span>, <span class="string">'pub'</span>, <span class="string">'recycling'</span>, <span class="string">'shelter'</span>)</span><br><span class="line">                   <span class="keyword">OR</span> barrier_val <span class="keyword">IN</span> (<span class="string">'block'</span>, <span class="string">'bollard'</span>, <span class="string">'lift_gate'</span>)</span><br><span class="line">                   <span class="keyword">OR</span> highway_val <span class="keyword">IN</span> (<span class="string">'bus_stop'</span>, <span class="string">'ford'</span>)</span><br><span class="line">                   <span class="keyword">OR</span> historic_val <span class="keyword">IN</span> (<span class="string">'archaeological_site'</span>)</span><br><span class="line">                   <span class="keyword">OR</span> man_made_val <span class="keyword">IN</span> (<span class="string">'windmill'</span>)</span><br><span class="line">                   <span class="keyword">OR</span> natural_val <span class="keyword">IN</span> (<span class="string">'tree'</span>)</span><br><span class="line">                   <span class="keyword">OR</span> shop_val <span class="keyword">IN</span> (<span class="string">'department_store'</span>, <span class="string">'supermarket'</span>)</span><br><span class="line">                   <span class="keyword">OR</span> tourism_val <span class="keyword">IN</span> (<span class="string">'camp_site'</span>, <span class="string">'caravan_site'</span>, <span class="string">'information'</span>, <span class="string">'viewpoint'</span>)) <span class="keyword">THEN</span> <span class="number">16</span></span><br><span class="line">             <span class="keyword">WHEN</span> (aeroway_val <span class="keyword">IN</span> (<span class="string">'gate'</span>)</span><br><span class="line">                   <span class="keyword">OR</span> amenity_val <span class="keyword">IN</span> (</span><br><span class="line">                 <span class="string">'atm'</span>, <span class="string">'bank'</span>, <span class="string">'bar'</span>, <span class="string">'bicycle_rental'</span>,</span><br><span class="line">                 <span class="string">'cafe'</span>, <span class="string">'cinema'</span>, <span class="string">'courthouse'</span>, <span class="string">'drinking_water'</span>, <span class="string">'embassy'</span>, <span class="string">'emergency_phone'</span>,</span><br><span class="line">                 <span class="string">'fast_food'</span>, <span class="string">'fire_station'</span>, <span class="string">'fuel'</span>, <span class="string">'library'</span>, <span class="string">'pharmacy'</span>,</span><br><span class="line">                 <span class="string">'police'</span>, <span class="string">'post_box'</span>, <span class="string">'post_office'</span>, <span class="string">'restaurant'</span>, <span class="string">'telephone'</span>, <span class="string">'theatre'</span>,</span><br><span class="line">                 <span class="string">'toilets'</span>, <span class="string">'veterinary'</span>)</span><br><span class="line">                   <span class="keyword">OR</span> highway_val <span class="keyword">IN</span> (<span class="string">'traffic_signals'</span>)</span><br><span class="line">                   <span class="keyword">OR</span> historic_val <span class="keyword">IN</span> (<span class="string">'memorial'</span>)</span><br><span class="line">                   <span class="keyword">OR</span> leisure_val <span class="keyword">IN</span> (<span class="string">'playground'</span>, <span class="string">'slipway'</span>)</span><br><span class="line">                   <span class="keyword">OR</span> man_made_val <span class="keyword">IN</span> (<span class="string">'mast'</span>, <span class="string">'water_tower'</span>)</span><br><span class="line">                   <span class="keyword">OR</span> shop_val <span class="keyword">IN</span> (<span class="string">'bakery'</span>, <span class="string">'bicycle'</span>, <span class="string">'books'</span>, <span class="string">'butcher'</span>, <span class="string">'car'</span>, <span class="string">'car_repair'</span>,</span><br><span class="line">                                 <span class="string">'clothes'</span>, <span class="string">'computer'</span>, <span class="string">'convenience'</span>,</span><br><span class="line">                                 <span class="string">'doityourself'</span>, <span class="string">'dry_cleaning'</span>, <span class="string">'fashion'</span>, <span class="string">'florist'</span>, <span class="string">'gift'</span>,</span><br><span class="line">                                 <span class="string">'greengrocer'</span>, <span class="string">'hairdresser'</span>, <span class="string">'jewelry'</span>, <span class="string">'mobile_phone'</span>,</span><br><span class="line">                                 <span class="string">'optician'</span>, <span class="string">'pet'</span>)</span><br><span class="line">                   <span class="keyword">OR</span> tourism_val <span class="keyword">IN</span> (<span class="string">'bed_and_breakfast'</span>, <span class="string">'chalet'</span>, <span class="string">'guest_house'</span>,</span><br><span class="line">                                    <span class="string">'hostel'</span>, <span class="string">'hotel'</span>, <span class="string">'motel'</span>, <span class="string">'museum'</span>)) <span class="keyword">THEN</span> <span class="number">17</span></span><br><span class="line">             <span class="keyword">WHEN</span> (amenity_val <span class="keyword">IN</span> (<span class="string">'bench'</span>, <span class="string">'waste_basket'</span>)</span><br><span class="line">                   <span class="keyword">OR</span> railway_val <span class="keyword">IN</span> (<span class="string">'subway_entrance'</span>)) <span class="keyword">THEN</span> <span class="number">18</span></span><br><span class="line">             <span class="keyword">ELSE</span> <span class="literal">NULL</span> <span class="keyword">END</span></span><br><span class="line">    );</span></span><br><span class="line"><span class="operator"><span class="keyword">END</span>;</span></span><br><span class="line">$$ LANGUAGE plpgsql IMMUTABLE;</span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">--               mz_calculate_road_level()</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> mz_calculate_road_level(highway_val <span class="built_in">text</span>, railway_val <span class="built_in">text</span>, aeroway_val <span class="built_in">text</span>)</span><br><span class="line"><span class="keyword">RETURNS</span> <span class="built_in">SMALLINT</span> <span class="keyword">AS</span> $$</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">RETURN</span> (</span><br><span class="line">        <span class="keyword">CASE</span> <span class="keyword">WHEN</span> highway_val <span class="keyword">IN</span> (<span class="string">'motorway'</span>) <span class="keyword">THEN</span> <span class="number">7</span></span><br><span class="line">             <span class="keyword">WHEN</span> highway_val <span class="keyword">IN</span> (<span class="string">'trunk'</span>, <span class="string">'primary'</span>, <span class="string">'secondary'</span>) <span class="keyword">THEN</span> <span class="number">10</span></span><br><span class="line">             <span class="keyword">WHEN</span> (highway_val <span class="keyword">IN</span> (<span class="string">'tertiary'</span>)</span><br><span class="line">                <span class="keyword">OR</span> aeroway_val <span class="keyword">IN</span> (<span class="string">'runway'</span>, <span class="string">'taxiway'</span>)) <span class="keyword">THEN</span> <span class="number">11</span></span><br><span class="line">             <span class="keyword">WHEN</span> highway_val <span class="keyword">IN</span> (<span class="string">'motorway_link'</span>, <span class="string">'trunk_link'</span>, <span class="string">'residential'</span>, <span class="string">'unclassified'</span>, <span class="string">'road'</span>) <span class="keyword">THEN</span> <span class="number">12</span></span><br><span class="line">             <span class="keyword">WHEN</span> highway_val <span class="keyword">IN</span> (<span class="string">'primary_link'</span>, <span class="string">'secondary_link'</span>) <span class="keyword">THEN</span> <span class="number">13</span></span><br><span class="line">             <span class="keyword">WHEN</span> (highway_val <span class="keyword">IN</span> (<span class="string">'tertiary_link'</span>, <span class="string">'minor'</span>)</span><br><span class="line">                <span class="keyword">OR</span> railway_val <span class="keyword">IN</span> (<span class="string">'rail'</span>, <span class="string">'subway'</span>)) <span class="keyword">THEN</span> <span class="number">14</span></span><br><span class="line">             <span class="keyword">WHEN</span> (highway_val <span class="keyword">IN</span> (<span class="string">'service'</span>, <span class="string">'footpath'</span>, <span class="string">'track'</span>, <span class="string">'footway'</span>, <span class="string">'steps'</span>, <span class="string">'pedestrian'</span>, <span class="string">'path'</span>, <span class="string">'cycleway'</span>, <span class="string">'living_street'</span>)</span><br><span class="line">                <span class="keyword">OR</span> railway_val <span class="keyword">IN</span> (<span class="string">'tram'</span>, <span class="string">'light_rail'</span>, <span class="string">'narrow_gauge'</span>, <span class="string">'monorail'</span>)) <span class="keyword">THEN</span> <span class="number">15</span></span><br><span class="line">             <span class="keyword">ELSE</span> <span class="literal">NULL</span> <span class="keyword">END</span></span><br><span class="line">    );</span></span><br><span class="line"><span class="operator"><span class="keyword">END</span>;</span></span><br><span class="line">$$ LANGUAGE plpgsql IMMUTABLE;</span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">--               mz_calculate_road_sort_key()</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> mz_calculate_road_sort_key(</span><br><span class="line">    layer_val <span class="built_in">text</span>, bridge_val <span class="built_in">text</span>, tunnel_val <span class="built_in">text</span>, highway_val <span class="built_in">text</span>, railway_val <span class="built_in">text</span>, aeroway_val <span class="built_in">text</span>)</span><br><span class="line"><span class="keyword">RETURNS</span> <span class="built_in">FLOAT</span> <span class="keyword">AS</span> $$</span><br><span class="line"><span class="keyword">DECLARE</span> v_layer_as_float <span class="built_in">FLOAT</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">BEGIN</span></span><br><span class="line">    v_layer_as_float := mz_safe_convert_to_float(layer_val);</span></span><br><span class="line">    RETURN (</span><br><span class="line">        (CASE WHEN v_layer_as_float IS NOT NULL THEN 1000 * v_layer_as_float</span><br><span class="line">            ELSE 0</span><br><span class="line">            <span class="operator"><span class="keyword">END</span>)</span><br><span class="line"></span><br><span class="line">        +</span><br><span class="line"></span><br><span class="line">        <span class="comment">--</span></span><br><span class="line">        <span class="comment">-- Bridges and tunnels have an implicit physical layering.</span></span><br><span class="line">        <span class="comment">--</span></span><br><span class="line">        (<span class="keyword">CASE</span> <span class="keyword">WHEN</span> bridge_val <span class="keyword">IN</span> (<span class="string">'yes'</span>, <span class="string">'true'</span>) <span class="keyword">THEN</span> <span class="number">100</span></span><br><span class="line">            <span class="keyword">WHEN</span> tunnel_val <span class="keyword">IN</span> (<span class="string">'yes'</span>, <span class="string">'true'</span>) <span class="keyword">THEN</span> -<span class="number">100</span></span><br><span class="line">            <span class="keyword">ELSE</span> <span class="number">0</span></span><br><span class="line">            <span class="keyword">END</span>)</span><br><span class="line"></span><br><span class="line">        +</span><br><span class="line"></span><br><span class="line">        <span class="comment">--</span></span><br><span class="line">        <span class="comment">-- Large roads are drawn on top of smaller roads.</span></span><br><span class="line">        <span class="comment">--</span></span><br><span class="line">        (<span class="keyword">CASE</span> <span class="keyword">WHEN</span> highway_val <span class="keyword">IN</span> (<span class="string">'motorway'</span>) <span class="keyword">THEN</span> <span class="number">0</span></span><br><span class="line">            <span class="keyword">WHEN</span> railway_val <span class="keyword">IN</span> (<span class="string">'rail'</span>, <span class="string">'tram'</span>, <span class="string">'light_rail'</span>, <span class="string">'narrow_guage'</span>, <span class="string">'monorail'</span>) <span class="keyword">THEN</span> -.<span class="number">5</span></span><br><span class="line">            <span class="keyword">WHEN</span> highway_val <span class="keyword">IN</span> (<span class="string">'trunk'</span>) <span class="keyword">THEN</span> -<span class="number">1</span></span><br><span class="line">            <span class="keyword">WHEN</span> highway_val <span class="keyword">IN</span> (<span class="string">'primary'</span>) <span class="keyword">THEN</span> -<span class="number">2</span></span><br><span class="line">            <span class="keyword">WHEN</span> highway_val <span class="keyword">IN</span> (<span class="string">'secondary'</span>) <span class="keyword">THEN</span> -<span class="number">3</span></span><br><span class="line">            <span class="keyword">WHEN</span> aeroway_val <span class="keyword">IN</span> (<span class="string">'runway'</span>) <span class="keyword">THEN</span> -<span class="number">3</span></span><br><span class="line">            <span class="keyword">WHEN</span> aeroway_val <span class="keyword">IN</span> (<span class="string">'taxiway'</span>) <span class="keyword">THEN</span> -<span class="number">3.5</span></span><br><span class="line">            <span class="keyword">WHEN</span> highway_val <span class="keyword">IN</span> (<span class="string">'tertiary'</span>) <span class="keyword">THEN</span> -<span class="number">4</span></span><br><span class="line">            <span class="keyword">WHEN</span> highway_val <span class="keyword">LIKE</span> <span class="string">'%_link'</span> <span class="keyword">THEN</span> -<span class="number">5</span></span><br><span class="line">            <span class="keyword">WHEN</span> highway_val <span class="keyword">IN</span> (<span class="string">'residential'</span>, <span class="string">'unclassified'</span>, <span class="string">'road'</span>) <span class="keyword">THEN</span> -<span class="number">6</span></span><br><span class="line">            <span class="keyword">WHEN</span> highway_val <span class="keyword">IN</span> (<span class="string">'unclassified'</span>, <span class="string">'service'</span>, <span class="string">'minor'</span>) <span class="keyword">THEN</span> -<span class="number">7</span></span><br><span class="line">            <span class="keyword">WHEN</span> railway_val <span class="keyword">IN</span> (<span class="string">'subway'</span>) <span class="keyword">THEN</span> -<span class="number">8</span></span><br><span class="line">            <span class="keyword">ELSE</span> -<span class="number">9</span> <span class="keyword">END</span>)</span><br><span class="line">    );</span></span><br><span class="line"><span class="operator"><span class="keyword">END</span>;</span></span><br><span class="line">$$ LANGUAGE plpgsql IMMUTABLE;</span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">--               mz_calculate_is_water()</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> mz_calculate_is_water(</span><br><span class="line">    waterway_val <span class="built_in">text</span>, natural_val <span class="built_in">text</span>, landuse_val <span class="built_in">text</span>)</span><br><span class="line"><span class="keyword">RETURNS</span> <span class="built_in">BOOLEAN</span> <span class="keyword">AS</span> $$</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">RETURN</span> (</span><br><span class="line">        waterway_val <span class="keyword">IN</span> (<span class="string">'riverbank'</span>, <span class="string">'dock'</span>)</span><br><span class="line">     <span class="keyword">OR</span> natural_val <span class="keyword">IN</span> (<span class="string">'water'</span>)</span><br><span class="line">     <span class="keyword">OR</span> landuse_val <span class="keyword">IN</span> (<span class="string">'basin'</span>, <span class="string">'reservoir'</span>)</span><br><span class="line">    );</span></span><br><span class="line"><span class="operator"><span class="keyword">END</span>;</span></span><br><span class="line">$$ LANGUAGE plpgsql IMMUTABLE;</span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">--               mz_calculate_is_building_or_part()</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> mz_calculate_is_building_or_part(</span><br><span class="line">    building_val <span class="built_in">text</span>, buildingpart_val <span class="built_in">text</span>)</span><br><span class="line"><span class="keyword">RETURNS</span> <span class="built_in">BOOLEAN</span> <span class="keyword">AS</span> $$</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">RETURN</span> (building_val <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">OR</span> buildingpart_val <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>);</span></span><br><span class="line"><span class="operator"><span class="keyword">END</span>;</span></span><br><span class="line">$$ LANGUAGE plpgsql IMMUTABLE;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- functions to temporarily enable and disable triggers</span></span><br><span class="line"><span class="comment">-- prevents them from firing while executing mass updates</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">--               mz_tables_with_triggers()</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> mz_tables_with_triggers()</span><br><span class="line"><span class="keyword">RETURNS</span> <span class="built_in">TEXT</span>[] <span class="keyword">AS</span> $$</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">RETURN</span> <span class="built_in">ARRAY</span>[<span class="string">'planet_osm_polygon'</span>, <span class="string">'planet_osm_line'</span>, <span class="string">'planet_osm_point'</span>, <span class="string">'water_polygons'</span>];</span></span><br><span class="line"><span class="operator"><span class="keyword">END</span>;</span></span><br><span class="line">$$ LANGUAGE plpgsql IMMUTABLE;</span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">--               mz_disable_triggers()</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> mz_disable_triggers()</span><br><span class="line"><span class="keyword">RETURNS</span> VOID <span class="keyword">AS</span> $$</span><br><span class="line"><span class="keyword">DECLARE</span> table_name <span class="built_in">TEXT</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">BEGIN</span></span><br><span class="line">    FOREACH table_name <span class="keyword">IN</span> <span class="built_in">ARRAY</span> mz_tables_with_triggers()</span><br><span class="line">    LOOP</span><br><span class="line">        <span class="keyword">EXECUTE</span> <span class="string">'ALTER TABLE '</span> || quote_ident(table_name) ||</span><br><span class="line">                <span class="string">' DISABLE TRIGGER USER'</span>;</span></span><br><span class="line">    <span class="operator"><span class="keyword">END</span> LOOP;</span></span><br><span class="line"><span class="operator"><span class="keyword">END</span>;</span></span><br><span class="line">$$ LANGUAGE plpgsql VOLATILE;</span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">--               mz_enable_triggers()</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> mz_enable_triggers()</span><br><span class="line"><span class="keyword">RETURNS</span> VOID <span class="keyword">AS</span> $$</span><br><span class="line"><span class="keyword">DECLARE</span> table_name <span class="built_in">TEXT</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">BEGIN</span></span><br><span class="line">    FOREACH table_name <span class="keyword">IN</span> <span class="built_in">ARRAY</span> mz_tables_with_triggers()</span><br><span class="line">    LOOP</span><br><span class="line">        <span class="keyword">EXECUTE</span> <span class="string">'ALTER TABLE '</span> || quote_ident(table_name) ||</span><br><span class="line">                <span class="string">' ENABLE TRIGGER USER'</span>;</span></span><br><span class="line">    <span class="operator"><span class="keyword">END</span> LOOP;</span></span><br><span class="line"><span class="operator"><span class="keyword">END</span>;</span></span><br><span class="line">$$ LANGUAGE plpgsql VOLATILE;</span><br></pre></td></tr></table></figure>
<h3 id="导入的触发器">导入的触发器</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">--               mz_trigger_function_landuse()</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> mz_trigger_function_landuse()</span><br><span class="line"><span class="keyword">RETURNS</span> <span class="keyword">TRIGGER</span> <span class="keyword">AS</span> $$</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">IF</span> mz_calculate_is_landuse(NEW.<span class="string">"landuse"</span>, NEW.<span class="string">"leisure"</span>, NEW.<span class="string">"natural"</span>, NEW.<span class="string">"highway"</span>, NEW.<span class="string">"amenity"</span>, NEW.<span class="string">"aeroway"</span>) <span class="keyword">then</span></span><br><span class="line">        NEW.mz_is_landuse := <span class="literal">TRUE</span>;</span></span><br><span class="line">        NEW.mz_centroid := ST_Centroid(NEW.way);</span><br><span class="line">    ELSE</span><br><span class="line">        NEW.mz_is_landuse := NULL;</span><br><span class="line">        NEW.mz_centroid := NULL;</span><br><span class="line">    <span class="operator"><span class="keyword">END</span> <span class="keyword">IF</span>;</span></span><br><span class="line">    RETURN NEW;</span><br><span class="line"><span class="operator"><span class="keyword">END</span>;</span></span><br><span class="line">$$ LANGUAGE plpgsql VOLATILE;</span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">DO</span> $$</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"></span><br><span class="line">PERFORM mz_create_trigger_if_not_exists(<span class="string">'mz_trigger_landuse'</span>, <span class="string">'planet_osm_polygon'</span>, <span class="string">'mz_trigger_function_landuse'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">END</span> $$;</span></span><br></pre></td></tr></table></figure>
<h3 id="拆分瓦片处理">拆分瓦片处理</h3><p>split_to_tiles.sql</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- This file contains functions (see `mz_SplitIntoTiles()`) for splitting a</span></span><br><span class="line"><span class="comment">-- table of polygons into uniform tiles. It was useful in integrating the</span></span><br><span class="line"><span class="comment">-- ne_10m_land Natural Earth dataset, which, downloaded straight from the</span></span><br><span class="line"><span class="comment">-- source, stores all seven continents in one monolithic multipolygon. That</span></span><br><span class="line"><span class="comment">-- makes `st_intersects()`/`st_intersection()` take absurdly long, since they</span></span><br><span class="line"><span class="comment">-- can't take advantage of any spatial indexes (which *would* help if it were</span></span><br><span class="line"><span class="comment">-- split up into many smaller polygons), and thus clogs up tile queries, which</span></span><br><span class="line"><span class="comment">-- depend on both of those functions. Hence, we split it into 10km x 10km tiles</span></span><br><span class="line"><span class="comment">-- using `mz_SplitIntoTiles()`.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">--               mz_CreateGrid()</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">-- A function that creates a table containing a grid of cells, taken from here:</span></span><br><span class="line"><span class="comment">-- http://gis.stackexchange.com/questions/16374/how-to-create-a-regular-polygon-grid-in-postgis</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">create</span> <span class="keyword">or</span> <span class="keyword">replace</span> <span class="keyword">function</span> mz_CreateGrid(</span><br><span class="line">	numberX <span class="built_in">integer</span>,</span><br><span class="line">	numberY <span class="built_in">integer</span>,</span><br><span class="line">	xsize float8,</span><br><span class="line">	ysize float8,</span><br><span class="line">	x0 float8 <span class="keyword">default</span> <span class="number">0</span>,</span><br><span class="line">	y0 float8 <span class="keyword">default</span> <span class="number">0</span>,</span><br><span class="line">	out <span class="string">"row"</span> <span class="built_in">integer</span>,</span><br><span class="line">	out col <span class="built_in">integer</span>,</span><br><span class="line">	out the_geom geometry</span><br><span class="line">)</span><br><span class="line"><span class="keyword">returns</span> setof record <span class="keyword">as</span></span><br><span class="line">$$</span><br><span class="line">	<span class="keyword">select</span></span><br><span class="line">		rowInd + <span class="number">1</span> <span class="keyword">as</span> <span class="keyword">row</span>,</span><br><span class="line">		colInd + <span class="number">1</span> <span class="keyword">as</span> col,</span><br><span class="line">		st_Translate(cell, colInd * xsize + x0, rowInd * ysize + y0) <span class="keyword">as</span> the_geom</span><br><span class="line">	<span class="keyword">from</span></span><br><span class="line">		generate_series(<span class="number">0</span>, numberY - <span class="number">1</span>) <span class="keyword">as</span> rowInd,</span><br><span class="line">		generate_series(<span class="number">0</span>, numberX - <span class="number">1</span>) <span class="keyword">as</span> colInd,</span><br><span class="line">		(<span class="keyword">select</span> (<span class="keyword">format</span>(<span class="string">'POLYGON((0 0, 0 %s, %s %s, %s 0,0 0))'</span>, ysize, xsize, ysize, xsize))::geometry <span class="keyword">as</span> cell) <span class="keyword">as</span> foo;</span></span><br><span class="line">$$ language sql immutable strict;</span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">--               mz_SplitIntoTiles()</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">-- Split the polygons in a table called `table_name` into uniformly sized tiles</span></span><br><span class="line"><span class="comment">-- in a table called `$&#123;table_name&#125;_tiles`.</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">create</span> <span class="keyword">or</span> <span class="keyword">replace</span> <span class="keyword">function</span> mz_SplitIntoTiles(</span><br><span class="line">	table_name <span class="built_in">text</span>,</span><br><span class="line">	tile_size_meters <span class="built_in">integer</span>,</span><br><span class="line">	geom_column_name <span class="built_in">text</span> <span class="keyword">default</span> <span class="string">'the_geom'</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">returns</span> void <span class="keyword">as</span></span><br><span class="line">$$</span><br><span class="line">	<span class="keyword">declare</span></span><br><span class="line">		grid_table_name <span class="built_in">text</span> := table_name || <span class="string">'_grid'</span>;</span></span><br><span class="line">		table_bbox box2d;</span><br><span class="line">		num_tiles_x integer;</span><br><span class="line">		num_tiles_y integer;</span><br><span class="line">	<span class="operator"><span class="keyword">begin</span></span><br><span class="line">		<span class="keyword">execute</span> <span class="keyword">format</span>(<span class="string">'select st_extent(%s) from %s'</span>, geom_column_name, table_name) <span class="keyword">into</span> table_bbox;</span></span><br><span class="line">		num_tiles_x = ceiling(</span><br><span class="line">			(st_xmax(table_bbox) - st_xmin(table_bbox)) / (tile_size_meters :: float)</span><br><span class="line">		);</span><br><span class="line">		num_tiles_y = ceiling(</span><br><span class="line">			(st_ymax(table_bbox) - st_ymin(table_bbox)) / (tile_size_meters :: float)</span><br><span class="line">		);</span><br><span class="line"></span><br><span class="line">		<span class="comment">-- Create a table containing a grid with cells of length/width</span></span><br><span class="line">		<span class="comment">-- `tile_size_meters`, covering the entire extent of `table_name`.</span></span><br><span class="line">		<span class="operator"><span class="keyword">execute</span> <span class="keyword">format</span>(</span><br><span class="line">			<span class="string">'create table %s as</span><br><span class="line">			select *</span><br><span class="line">			from MZ_CreateGrid(%s, %s, %s, %s, %s, %s);'</span>,</span><br><span class="line">			grid_table_name, num_tiles_x, num_tiles_y,</span><br><span class="line">			tile_size_meters, tile_size_meters,</span><br><span class="line">			st_xmin(table_bbox), st_ymin(table_bbox)</span><br><span class="line">		);</span></span><br><span class="line">		perform UpdateGeometrySRID(grid_table_name, 'the_geom', 900913);</span><br><span class="line">		<span class="operator"><span class="keyword">execute</span> <span class="keyword">format</span>(<span class="string">'create index %s_index on %1$s using gist(the_geom)'</span>, grid_table_name);</span></span><br><span class="line"></span><br><span class="line">		<span class="operator"><span class="keyword">execute</span> <span class="keyword">format</span>(<span class="string">'create sequence %1$s_ids;'</span>, table_name);</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">-- Intersect the gridded cells with the polygons in `table_name`,</span></span><br><span class="line">		<span class="comment">-- storing the now-tiled polygons in `$&#123;table_name&#125;_tiles`. Assign each</span></span><br><span class="line">		<span class="comment">-- a unique `gid`.</span></span><br><span class="line">		<span class="operator"><span class="keyword">execute</span> <span class="keyword">format</span>(</span><br><span class="line">			<span class="string">'create table %1$s_tiles as</span><br><span class="line">			select</span><br><span class="line">				nextval(''%1$s_ids'')::int as gid,</span><br><span class="line">				st_intersection(%1$s.%3$s, %2$s.the_geom) as the_geom</span><br><span class="line">			from %1$s</span><br><span class="line">			join %2$s</span><br><span class="line">			on (</span><br><span class="line">				st_isvalid(%1$s.%3$s) and</span><br><span class="line">				st_intersects(%1$s.%3$s, %2$s.the_geom)</span><br><span class="line">			);'</span>,</span><br><span class="line">			table_name, grid_table_name, geom_column_name</span><br><span class="line">		);</span></span><br><span class="line"></span><br><span class="line">		<span class="operator"><span class="keyword">execute</span> <span class="string">'drop table '</span> || grid_table_name;</span></span><br><span class="line">	<span class="operator"><span class="keyword">end</span></span><br><span class="line">$$ <span class="keyword">language</span> plpgsql;</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="执行总流程介绍">执行总流程介绍</h3><p>Perform-sql-updates.sql是总执行脚本</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span cl]]>
    </summary>
    
      <category term="gis" scheme="http://yoursite.com/tags/gis/"/>
    
      <category term="osm" scheme="http://yoursite.com/tags/osm/"/>
    
      <category term="sql" scheme="http://yoursite.com/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[用python写一个osm2rdbms导入工具]]></title>
    <link href="http://yoursite.com/2015/02/27/GIS/%E7%94%A8python%E5%86%99%E4%B8%80%E4%B8%AAosm2rdbms%E5%AF%BC%E5%85%A5%E5%B7%A5%E5%85%B7/"/>
    <id>http://yoursite.com/2015/02/27/GIS/用python写一个osm2rdbms导入工具/</id>
    <published>2015-02-27T12:49:23.000Z</published>
    <updated>2015-07-26T16:46:45.000Z</updated>
    <content type="html"><![CDATA[<h3 id="代码">代码</h3><p>首先贴出代码:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> osgeo <span class="keyword">import</span> ogr</span><br><span class="line"><span class="keyword">import</span> pyodbc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    src_conn_info = <span class="string">"../shape_eg_data/pline.shp"</span></span><br><span class="line">    dst_conn_info = <span class="string">"DSN=svde;SERVER=127.0.0.1;TCP_PORT=5236;UID=SYSDBA;PWD=SYSDBA;"</span></span><br><span class="line"></span><br><span class="line">    ogr_dm_type_mapping = &#123;</span><br><span class="line">            <span class="string">'0'</span> : <span class="string">'integer'</span>,</span><br><span class="line">            <span class="string">'1'</span> : <span class="string">'double'</span>,</span><br><span class="line">            <span class="string">'2'</span> : <span class="string">'varchar'</span>,</span><br><span class="line">            <span class="string">'3'</span> : <span class="string">'varchar'</span>,</span><br><span class="line">            <span class="string">'4'</span> : <span class="string">'varchar'</span>,</span><br><span class="line">            <span class="string">'5'</span> : <span class="string">'varchar'</span>,</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">    ogr_geom_type_mapping = &#123;</span><br><span class="line">            <span class="string">'0'</span> : <span class="string">'Point'</span>,</span><br><span class="line">            <span class="string">'1'</span> : <span class="string">'LineString'</span>,</span><br><span class="line">            <span class="string">'2'</span> : <span class="string">'Polygon'</span>,</span><br><span class="line">            <span class="string">'3'</span> : <span class="string">'MultiPoint'</span>,</span><br><span class="line">            <span class="string">'4'</span> : <span class="string">'MultiLineString'</span>,</span><br><span class="line">            <span class="string">'5'</span> : <span class="string">'MultiPolygon'</span>,</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">    dm_conn = pyodbc.connect(dst_conn_info)</span><br><span class="line">    cursor = dm_conn.cursor()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Ensure metadata talbes exsits</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        cursor.execute(<span class="string">"""select 1 from svde_metadata"""</span>)</span><br><span class="line">    <span class="keyword">except</span> pyodbc.ProgrammingError:</span><br><span class="line">        cursor.execute(<span class="string">"""create table svde_metadata(</span><br><span class="line">                        table_name varchar primary key,</span><br><span class="line">                        geom_column_name varchar not null,</span><br><span class="line">                        geom_type varchar,</span><br><span class="line">                        geom_dimension varchar,</span><br><span class="line">                        geom_srid varchar)"""</span>)</span><br><span class="line">        cursor.execute(<span class="string">"""create table svde_srs(</span><br><span class="line">                        srid varchar primary key,</span><br><span class="line">                        auth_name varchar,</span><br><span class="line">                        auth_srid varchar,</span><br><span class="line">                        srtext varchar not null,</span><br><span class="line">                        proj4text varchar)"""</span>)</span><br><span class="line">        cursor.execute(<span class="string">"""create table svde_column_defn(</span><br><span class="line">                        cid varchar,</span><br><span class="line">                        table_name varchar not null,</span><br><span class="line">                        column_name varchar not null,</span><br><span class="line">                        column_type varchar not null,</span><br><span class="line">                        primary key (table_name, column_name))"""</span>)</span><br><span class="line">        cursor.commit()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"metadata tables already exists in database!"</span></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Create table for shapefile layer</span></span><br><span class="line"></span><br><span class="line">    ds = ogr.Open(src_conn_info)</span><br><span class="line">    layer = ds.GetLayer()</span><br><span class="line">    layer_defn = layer.GetLayerDefn()</span><br><span class="line">    field_count = layer_defn.GetFieldCount()</span><br><span class="line"></span><br><span class="line">    fields_type_dict = &#123;&#125;</span><br><span class="line">    fields_defn_serial = <span class="string">""</span></span><br><span class="line">    fields_comma_serial = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, field_count-<span class="number">1</span>):</span><br><span class="line">        field_name = layer_defn.GetFieldDefn(i).GetName()</span><br><span class="line">        field_type = layer_defn.GetFieldDefn(i).GetType()</span><br><span class="line">        fields_type_dict[field_name] = ogr_dm_type_mapping[str(field_type)]</span><br><span class="line">        fields_defn_serial += field_name + <span class="string">' '</span> + ogr_dm_type_mapping[str(field_type)] + <span class="string">','</span></span><br><span class="line">        fields_comma_serial += field_name + <span class="string">','</span></span><br><span class="line"></span><br><span class="line">    fields_defn_serial = fields_defn_serial.rstrip(<span class="string">', '</span>)</span><br><span class="line">    fields_comma_serial = fields_comma_serial.rstrip(<span class="string">', '</span>)</span><br><span class="line"></span><br><span class="line">    table_name = layer_defn.GetName()</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"fields_comma_serial"</span> + fields_comma_serial</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"""create table %s (</span><br><span class="line">                   %s,</span><br><span class="line">                   fid varchar primary key,</span><br><span class="line">                   geom varchar)"""</span> % (table_name, fields_defn_serial)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        cursor.execute(<span class="string">"""select 1 from %s"""</span> % (table_name) )</span><br><span class="line">    <span class="keyword">except</span> pyodbc.ProgrammingError:</span><br><span class="line">        <span class="comment"># 1] create table for layer</span></span><br><span class="line">        <span class="comment"># 2] register geom colum in svde_metadata </span></span><br><span class="line">        <span class="comment"># 3] register column in svde_column_defn</span></span><br><span class="line">        cursor.execute(<span class="string">"""create table %s (</span><br><span class="line">                       %s,</span><br><span class="line">                       fid varchar primary key,</span><br><span class="line">                       geom varchar)"""</span> % (table_name, fields_defn_serial) ) </span><br><span class="line">        cursor.commit()</span><br><span class="line"></span><br><span class="line">        geom_type = ogr_geom_type_mapping[str(layer_defn.GetGeomType())]</span><br><span class="line">        geom_dimension = str(<span class="number">2</span>)</span><br><span class="line">        geom_srid = str(<span class="number">900913</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">print</span> <span class="string">"""insert into svde_metadata(table_name, geom_column_name, geom_type,</span><br><span class="line">                geom_dimension, geom_srid) values (%s, 'geom', %s, %s, %s)</span><br><span class="line">                """</span> % (repr(table_name), repr(geom_type), repr(geom_dimension), repr(geom_srid) )</span><br><span class="line"></span><br><span class="line">        cursor.execute(<span class="string">"""insert into svde_metadata(table_name, geom_column_name, geom_type,</span><br><span class="line">                geom_dimension, geom_srid) values (%s, 'geom', %s, %s, %s)</span><br><span class="line">                """</span> % (repr(table_name), repr(geom_type), repr(geom_dimension), repr(geom_srid) ) )</span><br><span class="line"></span><br><span class="line">        <span class="keyword">print</span> fields_type_dict</span><br><span class="line">        <span class="keyword">for</span> cname, cvalue <span class="keyword">in</span> fields_type_dict.items():</span><br><span class="line">            cursor.execute(<span class="string">"""insert into svde_column_defn( table_name, column_name, column_type)</span><br><span class="line">                            values ('%s', '%s', '%s')"""</span> % (table_name, cname, str(cvalue)) )</span><br><span class="line">        cursor.commit()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"table "</span> + str(table_name) + <span class="string">"already exsit"</span></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Read shapefile layer into OGR objects and Persist ogr objects into dameng </span></span><br><span class="line">    </span><br><span class="line">    fid = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> feat <span class="keyword">in</span> layer:</span><br><span class="line">        fid = fid + <span class="number">1</span></span><br><span class="line">        values_comma_serial = <span class="string">""</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, field_count-<span class="number">1</span>):</span><br><span class="line">            value = feat.GetFieldAsString(i)</span><br><span class="line">            values_comma_serial += repr(value) + <span class="string">','</span></span><br><span class="line"></span><br><span class="line">        values_comma_serial = values_comma_serial.rstrip(<span class="string">','</span>)</span><br><span class="line">        geom_wkt = feat.GetGeometryRef().ExportToWkt()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">print</span> <span class="string">"""insert into %s(%s, fid, geom) values (%s, '%s' , '%s')"""</span> % (</span><br><span class="line">            table_name, fields_comma_serial, values_comma_serial, str(fid), geom_wkt) </span><br><span class="line">        </span><br><span class="line">        cursor.execute(<span class="string">"""insert into %s(%s, fid, geom) values (%s, '%s' , '%s')"""</span> % (</span><br><span class="line">            table_name, fields_comma_serial, values_comma_serial, str(fid), geom_wkt) )</span><br><span class="line">        <span class="comment"># allowed most 100 sql statement, so should not commit after execute all</span></span><br><span class="line">        cursor.commit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__  ==   <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="代码">代码</h3><p>首先贴出代码:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span c]]>
    </summary>
    
      <category term="gis" scheme="http://yoursite.com/tags/gis/"/>
    
      <category term="pyodbc" scheme="http://yoursite.com/tags/pyodbc/"/>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[C++_API设计总结]]></title>
    <link href="http://yoursite.com/2014/12/09/Programming/C-API%E8%AE%BE%E8%AE%A1%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2014/12/09/Programming/C-API设计总结/</id>
    <published>2014-12-09T11:59:20.000Z</published>
    <updated>2015-07-26T16:47:24.000Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
      <category term="programming" scheme="http://yoursite.com/tags/programming/"/>
    
      <category term="设计" scheme="http://yoursite.com/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[GIS空间索引技术总结]]></title>
    <link href="http://yoursite.com/2014/12/08/GIS/GIS%E7%A9%BA%E9%97%B4%E7%B4%A2%E5%BC%95%E6%8A%80%E6%9C%AF%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2014/12/08/GIS/GIS空间索引技术总结/</id>
    <published>2014-12-08T06:44:54.000Z</published>
    <updated>2015-07-26T16:46:17.000Z</updated>
    <content type="html"><![CDATA[<h3 id="GIS索引技术总结">GIS索引技术总结</h3><ul>
<li>网格索引</li>
<li>四叉树索引</li>
<li>R树系列索引</li>
</ul>
<h3 id="网格索引">网格索引</h3><h3 id="四叉树索引">四叉树索引</h3><h3 id="R树系列索引">R树系列索引</h3>]]></content>
    <summary type="html">
    <![CDATA[<h3 id="GIS索引技术总结">GIS索引技术总结</h3><ul>
<li>网格索引</li>
<li>四叉树索引</li>
<li>R树系列索引</li>
</ul>
<h3 id="网格索引">网格索引</h3><h3 id="四叉树索引">四叉树索引</h3><h3]]>
    </summary>
    
      <category term="gis" scheme="http://yoursite.com/tags/gis/"/>
    
      <category term="索引" scheme="http://yoursite.com/tags/%E7%B4%A2%E5%BC%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[设计模式总结]]></title>
    <link href="http://yoursite.com/2014/11/10/Programming/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2014/11/10/Programming/设计模式总结/</id>
    <published>2014-11-10T00:49:35.000Z</published>
    <updated>2015-07-26T16:33:57.000Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
      <category term="软件设计" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[服务器IO模型总结]]></title>
    <link href="http://yoursite.com/2014/10/29/Linux/%E6%9C%8D%E5%8A%A1%E5%99%A8IO%E6%A8%A1%E5%9E%8B%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2014/10/29/Linux/服务器IO模型总结/</id>
    <published>2014-10-29T14:49:30.000Z</published>
    <updated>2015-07-26T16:47:04.000Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
      <category term="i/o" scheme="http://yoursite.com/tags/i-o/"/>
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[服务器并发策略总结]]></title>
    <link href="http://yoursite.com/2014/10/08/Linux/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B9%B6%E5%8F%91%E7%AD%96%E7%95%A5%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2014/10/08/Linux/服务器并发策略总结/</id>
    <published>2014-10-08T14:49:15.000Z</published>
    <updated>2015-07-26T16:47:14.000Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
      <category term="concurrency" scheme="http://yoursite.com/tags/concurrency/"/>
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
      <category term="multi thread" scheme="http://yoursite.com/tags/multi-thread/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[PostGIS总结]]></title>
    <link href="http://yoursite.com/2014/05/04/DataBase/PostGIS%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2014/05/04/DataBase/PostGIS总结/</id>
    <published>2014-05-04T09:22:26.000Z</published>
    <updated>2015-07-26T16:36:39.000Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
      <category term="database" scheme="http://yoursite.com/tags/database/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[为什么NoSQL]]></title>
    <link href="http://yoursite.com/2014/04/14/DataBase/%E4%B8%BA%E4%BB%80%E4%B9%88NoSQL/"/>
    <id>http://yoursite.com/2014/04/14/DataBase/为什么NoSQL/</id>
    <published>2014-04-14T12:34:24.000Z</published>
    <updated>2015-07-26T16:46:00.000Z</updated>
    <content type="html"><![CDATA[<h3 id=""> </h3><p>在Youtube上看了fall Martin的关于NoSQL的演讲视频<a href="">Introduction of NoSQL</a>收获很多，然而之前并木有想到坐着想打的这些问题，如是做一下总结：</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id=""> </h3><p>在Youtube上看了fall Martin的关于NoSQL的演讲视频<a href="">Introduction of NoSQL</a>收获很多，然而之前并木有想到坐着想打的这些问题，如是做一下总结：</p>
]]>
    </summary>
    
      <category term="database" scheme="http://yoursite.com/tags/database/"/>
    
      <category term="nosql" scheme="http://yoursite.com/tags/nosql/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[从ACID到CAP/BASE]]></title>
    <link href="http://yoursite.com/2014/04/02/DataBase/%E4%BB%8EACID%E5%88%B0CAP-BASE/"/>
    <id>http://yoursite.com/2014/04/02/DataBase/从ACID到CAP-BASE/</id>
    <published>2014-04-02T13:34:13.000Z</published>
    <updated>2015-07-26T16:44:40.000Z</updated>
    <content type="html"><![CDATA[<h3 id="前言">前言</h3><h3 id="ACID">ACID</h3><p>数据库系统真正庞大而复杂的部分是事务存储管理器，该部分由以下四个彼此紧密关联的组件组成：</p>
<ul>
<li>用于并发控制的锁管理器</li>
<li>用于事务恢复的日志管理器</li>
<li>数据库IO缓冲池</li>
<li>用于组织磁盘数据的访问方法</li>
</ul>
<p>ACID并不是为了保证事务正确而被正式定义并经得起数学论证的术语，可串行化才是。他们的实现机制如下：</p>
<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="header">性质           实现机制</span><br><span class="line">------------------------------------------</span></span><br><span class="line">Atomicity      </span><br><span class="line">Consistency    锁</span><br><span class="line">Isolation      锁</span><br><span class="line">Durability     日志和恢复技术</span><br></pre></td></tr></table></figure>
<h4 id="Atomicity(原子性)">Atomicity(原子性)</h4><h4 id="Consistency(一致性)">Consistency(一致性)</h4><h4 id="Isolation(隔离性)">Isolation(隔离性)</h4><ul>
<li>隔离级别是事务之间并发读写的控制级别,不同隔离级别对解决并发请求时可能会发生的脏读、重复度和幻读三个问题的程度不同。</li>
<li>事务隔离级别越高，就越能保证数据的一致性。</li>
<li>事务隔离界别越高, 对并发性能的影响也越大。</li>
<li>弱一致性隔离级别(也就是低隔离级别越低)相对于完全可串行化而言，可以提供更高的并发性能。</li>
</ul>
<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="header">隔离级别     脏读     可重复读     幻读</span><br><span class="line">------------------------------------------</span></span><br><span class="line">未提交读     存在     不可以       存在</span><br><span class="line">已提交读     不存在   不可以       存在</span><br><span class="line">可重复读     不存在   可以         存在</span><br><span class="line">可串行化     不存在   可以         不存在</span><br></pre></td></tr></table></figure>
<p>ANSI SQL标准定义了四个“隔离级别”，按照增强的顺序可分为：</p>
<h5 id="未提交读">未提交读</h5><p>一个事务可以读任何已提交或者未提交的数据。这可以通过“读操作不需要请求任何锁”来实现。</p>
<h5 id="已提交读">已提交读</h5><p>一个事务可以读任何已提交的数据。对于同一个对象的重复读可能导致读到不同版本的数据。实现方式是，<br>读数据前必须首先获得一个读操作锁，一旦数据读取之后该锁被立即释放。</p>
<h5 id="可重复读">可重复读</h5><p>在一个事务内，可重复度。一个事务只能读取一个已经提交数据的一个版本；一旦该事务读取了一个对象，那么，它将只能读取该对象的同一个版本。实现方式是，事务在请求读数据之前必须获得一个锁，并且保持该锁直到事务结束。</p>
<h5 id="可串行化">可串行化</h5><p>多个事务相互交错的一组并发执行，必须与该组事务的一个串行执行结果相对应-即执行结果与没有并发的结果相同。</p>
<p>除了ANSI SQL隔离级别以外，很多厂商提供了其他的一些可应用于特殊情况的隔离性级别：</p>
<h5 id="游标稳定">游标稳定</h5><h5 id="快照隔离">快照隔离</h5><h5 id="读一致">读一致</h5><h4 id="Durability(持久性)">Durability(持久性)</h4><h3 id="CAP">CAP</h3><h3 id="BASE">BASE</h3>]]></content>
    <summary type="html">
    <![CDATA[<h3 id="前言">前言</h3><h3 id="ACID">ACID</h3><p>数据库系统真正庞大而复杂的部分是事务存储管理器，该部分由以下四个彼此紧密关联的组件组成：</p>
<ul>
<li>用于并发控制的锁管理器</li>
<li>用于事务恢复的日志管理器</li]]>
    </summary>
    
      <category term="acid" scheme="http://yoursite.com/tags/acid/"/>
    
      <category term="base" scheme="http://yoursite.com/tags/base/"/>
    
      <category term="cap" scheme="http://yoursite.com/tags/cap/"/>
    
      <category term="database" scheme="http://yoursite.com/tags/database/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[读Architecture of a Database System牛文有感]]></title>
    <link href="http://yoursite.com/2014/04/02/DataBase/%E8%AF%BBArchitecture%20of%20a%20Database%20System/"/>
    <id>http://yoursite.com/2014/04/02/DataBase/读Architecture of a Database System/</id>
    <published>2014-04-02T13:34:13.000Z</published>
    <updated>2015-07-26T16:38:03.000Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
      <category term="database" scheme="http://yoursite.com/tags/database/"/>
    
      <category term="database" scheme="http://yoursite.com/categories/database/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[PostgreSQL查询优化总结]]></title>
    <link href="http://yoursite.com/2014/03/18/DataBase/PostgreSQL%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2014/03/18/DataBase/PostgreSQL查询优化总结/</id>
    <published>2014-03-18T03:11:06.000Z</published>
    <updated>2015-07-26T16:36:44.000Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
      <category term="database" scheme="http://yoursite.com/tags/database/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[PostgreSQL索引技术]]></title>
    <link href="http://yoursite.com/2014/03/03/DataBase/PostgreSQL%E7%B4%A2%E5%BC%95%E6%8A%80%E6%9C%AF/"/>
    <id>http://yoursite.com/2014/03/03/DataBase/PostgreSQL索引技术/</id>
    <published>2014-03-03T00:35:42.000Z</published>
    <updated>2015-07-26T16:36:50.000Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
      <category term="database" scheme="http://yoursite.com/tags/database/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Linux文本操作工具总结]]></title>
    <link href="http://yoursite.com/2014/02/09/Linux/Linux%E6%96%87%E6%9C%AC%E6%93%8D%E4%BD%9C%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2014/02/09/Linux/Linux文本操作工具总结/</id>
    <published>2014-02-09T09:27:37.000Z</published>
    <updated>2015-07-26T16:34:09.000Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Linux文件与磁盘操作工具总结]]></title>
    <link href="http://yoursite.com/2014/01/28/Linux/Linux%E6%96%87%E4%BB%B6%E4%B8%8E%E7%A3%81%E7%9B%98%E6%93%8D%E4%BD%9C%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2014/01/28/Linux/Linux文件与磁盘操作工具总结/</id>
    <published>2014-01-28T02:26:20.000Z</published>
    <updated>2015-07-26T16:34:04.000Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Linux网络操作工具总结]]></title>
    <link href="http://yoursite.com/2014/01/18/Linux/Linux%E7%BD%91%E7%BB%9C%E6%93%8D%E4%BD%9C%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2014/01/18/Linux/Linux网络操作工具总结/</id>
    <published>2014-01-18T07:44:39.000Z</published>
    <updated>2015-07-26T16:34:18.000Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Linux进程和任务操作工具总结]]></title>
    <link href="http://yoursite.com/2014/01/04/Linux/Linux%E8%BF%9B%E7%A8%8B%E5%92%8C%E4%BB%BB%E5%8A%A1%E6%93%8D%E4%BD%9C%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2014/01/04/Linux/Linux进程和任务操作工具总结/</id>
    <published>2014-01-04T06:55:58.000Z</published>
    <updated>2015-07-26T16:34:24.000Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
</feed>